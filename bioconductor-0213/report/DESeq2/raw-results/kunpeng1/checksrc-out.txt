##############################################################################
##############################################################################
###
### Running command:
###
###   /home/biocbuild/bbs-3.17-bioc/R/bin/R CMD check --install=check:DESeq2.install-out.txt --library=/home/biocbuild/bbs-3.17-bioc/R/library --timings DESeq2_1.39.5.tar.gz
###
##############################################################################
##############################################################################


* using log directory ‘/home/biocbuild/bbs-3.17-bioc/meat/DESeq2.Rcheck’
* using R Under development (unstable) (2023-01-14 r83615)
* using platform: aarch64-unknown-linux-gnu (64-bit)
* R was compiled by
    gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
    GNU Fortran (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
* running under: Ubuntu 22.04.1 LTS
* using session charset: UTF-8
* checking for file ‘DESeq2/DESCRIPTION’ ... OK
* checking extension type ... Package
* this is package ‘DESeq2’ version ‘1.39.5’
* package encoding: UTF-8
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ‘DESeq2’ can be installed ... OK
* used C++ compiler: ‘g++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0’
* checking installed package size ... OK
* checking package directory ... OK
* checking ‘build’ directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... OK
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking line endings in C/C++/Fortran sources/headers ... OK
* checking line endings in Makefiles ... OK
* checking compilation flags in Makevars ... OK
* checking for GNU extensions in Makefiles ... OK
* checking for portable use of $(BLAS_LIBS) and $(LAPACK_LIBS) ... OK
* checking use of PKG_*FLAGS in Makefiles ... OK
* checking compiled code ... NOTE
Note: information on .o files is not available
* checking files in ‘vignettes’ ... OK
* checking examples ... ERROR
Running examples in ‘DESeq2-Ex.R’ failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: unmix
> ### Title: Unmix samples using loss in a variance stabilized space
> ### Aliases: unmix
> 
> ### ** Examples
> 
> 
> # some artificial data
> cts <- matrix(c(80,50,1,100,
+                 1,1,60,100,
+                 0,50,60,100), ncol=4, byrow=TRUE)
> # make a DESeqDataSet
> dds <- DESeqDataSetFromMatrix(cts,
+   data.frame(row.names=seq_len(ncol(cts))), ~1)
converting counts to integer mode
> colnames(dds) <- paste0("sample",1:4)
> 
> # note! here you would instead use
> # estimateSizeFactors() to do actual normalization
> sizeFactors(dds) <- rep(1, ncol(dds))
> 
> norm.cts <- counts(dds, normalized=TRUE)
> 
> # 'pure' should also have normalized counts...
> pure <- matrix(c(10,0,0,
+                  0,0,10,
+                  0,10,0), ncol=3, byrow=TRUE)
> colnames(pure) <- letters[1:3]
> 
> # for real data, you need to find alpha after fitting estimateDispersions()
> mix <- unmix(norm.cts, pure, alpha=0.01)
Warning in sqrt(alpha * q) : NaNs produced
Error in optim(par = rep(1, ncol(pure)), fn = sumLossVST, gr = NULL, i,  : 
  L-BFGS-B needs finite values of 'fn'
Calls: unmix -> lapply -> lapply -> FUN -> optim
Execution halted
* checking for unstated dependencies in ‘tests’ ... OK
* checking tests ...
  Running ‘testthat.R’
 OK
* checking for unstated dependencies in vignettes ... OK
* checking package vignettes in ‘inst/doc’ ... OK
* checking running R code from vignettes ...
  ‘DESeq2.Rmd’ using ‘UTF-8’... OK
 NONE
* checking re-building of vignette outputs ... OK
* checking PDF version of manual ... OK
* DONE

Status: 1 ERROR, 1 NOTE
See
  ‘/home/biocbuild/bbs-3.17-bioc/meat/DESeq2.Rcheck/00check.log’
for details.

