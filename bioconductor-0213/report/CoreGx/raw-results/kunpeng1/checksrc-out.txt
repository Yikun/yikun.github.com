##############################################################################
##############################################################################
###
### Running command:
###
###   /home/biocbuild/bbs-3.17-bioc/R/bin/R CMD check --install=check:CoreGx.install-out.txt --library=/home/biocbuild/bbs-3.17-bioc/R/library --timings CoreGx_2.3.1.tar.gz
###
##############################################################################
##############################################################################


* using log directory ‘/home/biocbuild/bbs-3.17-bioc/meat/CoreGx.Rcheck’
* using R Under development (unstable) (2023-01-14 r83615)
* using platform: aarch64-unknown-linux-gnu (64-bit)
* R was compiled by
    gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
    GNU Fortran (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
* running under: Ubuntu 22.04.1 LTS
* using session charset: UTF-8
* checking for file ‘CoreGx/DESCRIPTION’ ... OK
* checking extension type ... Package
* this is package ‘CoreGx’ version ‘2.3.1’
* package encoding: UTF-8
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ‘CoreGx’ can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking ‘build’ directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking dependencies in R code ... NOTE
There are ::: calls to the package's namespace in its code. A package
  almost never needs to use ::: for its own objects:
  ‘.LongTable’ ‘.parseToRoxygen’ ‘.sensitivityToTRE’
* checking S3 generic/method consistency ... NOTE
Found the following apparent S3 methods exported but not registered:
  subset.immutable
See section ‘Registering S3 methods’ in the ‘Writing R Extensions’
manual.
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
.checkForIdColumn: no visible binding for global variable ‘col_col’
.meshEval2: no visible binding for global variable ‘n’
.meshEval2: no visible binding for global variable ‘family’
.rebuildInfo: no visible global function definition for ‘patterns’
.rebuildInfo: no visible binding for global variable ‘..keepCols’
.rebuildInfo: no visible binding for global variable ‘replicate_id’
.rebuildInfo: no visible binding for global variable ‘treatment1id’
.rebuildInfo: no visible binding for global variable ‘sampleid’
.rebuildInfo: no visible binding for global variable ‘treatmentid’
.rebuildInfo: no visible binding for global variable ‘treatment_uid’
.rebuildInfo: no visible binding for global variable ‘..rowIDcols’
.rebuildInfo: no visible binding for global variable ‘sample_uid’
.rebuildInfo: no visible binding for global variable ‘..colIDcols’
.rebuildInfo: no visible binding for global variable ‘exp_id’
.rebuildProfiles: no visible binding for global variable
  ‘treatment_uid’
.rebuildProfiles: no visible binding for global variable ‘sample_uid’
.rebuildProfiles: no visible binding for global variable ‘exp_id’
.rebuildProfiles: no visible binding for global variable ‘N’
.rebuildRaw: no visible binding for global variable ‘.NATURAL’
.rebuildRaw: no visible binding for global variable ‘sampleid’
.rebuildRaw: no visible binding for global variable ‘exp_id’
.rebuildRaw: no visible binding for global variable ‘treatment1id’
.rebuildRaw: no visible binding for global variable ‘row_ids’
.rebuildRaw: no visible binding for global variable ‘col_ids’
.rebuildRaw: no visible binding for global variable ‘dose’
.rebuildRaw: no visible global function definition for ‘patterns’
.rebuildSensNumber: no visible global function definition for
  ‘patterns’
.rebuildSensNumber: no visible binding for global variable
  ‘.treatmentCombo’
.rebuildSensNumber: no visible binding for global variable
  ‘.sampleCombo’
.sensitivityToTRE: no visible binding for global variable ‘dose’
.sensitivityToTRE: no visible binding for global variable ‘viability’
.sensitivityToTRE: no visible binding for global variable
  ‘replicate_id’
.sensitivityToTRE: no visible binding for global variable ‘rn’
.sensitivityToTRE: no visible binding for global variable ‘treatmentid’
.sensitivityToTRE: no visible binding for global variable ‘sampleid’
.update_dimData: no visible binding for global variable ‘N’
.update_dimData: no visible binding for global variable ‘.NATURAL’
.update_dimData: no visible binding for global variable ‘.rownames’
CoreSet: no visible binding for global variable ‘cell’
CoreSet: no visible binding for global variable ‘drug’
CoreSet: no visible global function definition for ‘.checkForIdColumns’
aggregate2: no visible binding for global variable ‘group_id’
aggregate2: no visible binding for global variable ‘split_id’
cardinality: no visible binding for global variable ‘N’
checkColumnCardinality: no visible binding for global variable ‘N’
optimizeCoreGx: no visible binding for global variable ‘nthread’
optimizeCoreGx: no visible binding for global variable ‘total_time’
optimizeCoreGx: no visible binding for global variable ‘mem_alloc’
optimizeCoreGx: no visible binding for global variable ‘itr/sec’
optimizeCoreGx: no visible binding for global variable ‘gc/sec’
optimizeCoreGx: no visible binding for global variable ‘median_sec’
optimizeCoreGx: no visible binding for global variable ‘N’
buildComboProfiles,LongTable: no visible binding for global variable
  ‘treatment2dose’
buildComboProfiles,LongTable: no visible binding for global variable
  ‘treatment1dose’
coerce,SummarizedExperiment-data.table: no visible binding for global
  variable ‘.sample’
coerce,SummarizedExperiment-data.table: no visible binding for global
  variable ‘.feature’
reindex,LongTable: no visible binding for global variable ‘.rowKey’
reindex,LongTable: no visible binding for global variable ‘.colKey’
sensitivityRaw<-,CoreSet-array: no visible binding for global variable
  ‘V2’
sensitivityRaw<-,CoreSet-array: no visible binding for global variable
  ‘V1’
sensitivityRaw<-,CoreSet-array: no visible binding for global variable
  ‘rn’
treatmentResponse<-,CoreSet-list_OR_LongTable: no visible binding for
  global variable ‘funContext’
updateObject,CoreSet: no visible global function definition for
  ‘isValid’
updateObject,LongTable: no visible global function definition for
  ‘isValid’
Undefined global functions or variables:
  ..colIDcols ..keepCols ..rowIDcols .NATURAL .checkForIdColumns
  .colKey .feature .rowKey .rownames .sample .sampleCombo
  .treatmentCombo N V1 V2 cell col_col col_ids dose drug exp_id family
  funContext gc/sec group_id isValid itr/sec median_sec mem_alloc n
  nthread patterns replicate_id rn row_ids sample_uid sampleid split_id
  total_time treatment1dose treatment1id treatment2dose treatment_uid
  treatmentid viability
Consider adding
  importFrom("stats", "family")
to your NAMESPACE file.
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... NOTE
S3 methods shown with full name in documentation object 'setOps-immutable':
  ‘subset.immutable’

The \usage entries for S3 methods should use the \method markup and not
their full name.
See chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking contents of ‘data’ directory ... OK
* checking data for non-ASCII characters ... NOTE
  Note: found 8 marked UTF-8 strings
* checking LazyData ... OK
* checking data for ASCII and uncompressed saves ... OK
* checking files in ‘vignettes’ ... OK
* checking examples ... ERROR
Running examples in ‘CoreGx-Ex.R’ failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: CoreSet-accessors
> ### Title: Accessing and modifying information in a 'CoreSet'
> ### Aliases: CoreSet-accessors annotation,CoreSet-method annotation
> ###   annotation<-,CoreSet,list-method annotation<-
> ###   dateCreated,CoreSet-method dateCreated
> ###   dateCreated<-,CoreSet,character-method dateCreated<-,CoreSet-method
> ###   dateCreated<- name,CoreSet-method name name<-,CoreSet-method
> ###   name<-,CoreSet,character-method name<- sampleInfo,CoreSet-method
> ###   sampleInfo cellInfo,CoreSet-method cellInfo
> ###   sampleInfo<-,CoreSet,data.frame-method sampleInfo<-
> ###   cellInfo<-,CoreSet,data.frame-method cellInfo<-
> ###   sampleNames,CoreSet-method sampleName,CoreSet-method sampleNames
> ###   cellName,CoreSet-method cellNames
> ###   sampleNames<-,CoreSet,character-method
> ###   sampleNames<-,CoreSet,list-method sampleNames<-
> ###   cellNames<-,CoreSet,list-method cellNames<-
> ###   treatmentInfo,CoreSet-method treatmentInfo
> ###   treatmentInfo<-,CoreSet,data.frame-method treatmentInfo<-
> ###   treatmentNames,CoreSet-method treatmentNames
> ###   treatmentNames<-,CoreSet,character-method treatmentNames<-
> ###   curation,CoreSet-method curation curation<-,CoreSet,list-method
> ###   curation<- datasetType,CoreSet-method datasetType
> ###   datasetType<-,CoreSet,character-method datasetType<-
> ###   molecularProfiles,CoreSet-method molecularProfiles
> ###   molecularProfiles<-,CoreSet,character,character,matrix-method
> ###   molecularProfiles<-,CoreSet,character,missing,matrix-method
> ###   molecularProfiles<-,CoreSet,missing,missing,list-method
> ###   molecularProfiles<-,CoreSet,missing,missing,MutliAssayExperiment-method
> ###   molecularProfiles<-
> ###   molecularProfiles<-,CoreSet,missing,missing,list_OR_MAE-method
> ###   featureInfo,CoreSet-method featureInfo
> ###   featureInfo<-,CoreSet,character,data.frame-method
> ###   featureInfo<-,CoreSet,character,DataFrame-method featureInfo<-
> ###   phenoInfo,CoreSet,character-method phenoInfo
> ###   phenoInfo<-,CoreSet,character,data.frame-method
> ###   phenoInfo<-,CoreSet,character,DataFrame-method phenoInfo<-
> ###   fNames,CoreSet,character-method fNames
> ###   fNames<-,CoreSet,character,character-method fNames<-
> ###   mDataNames,CoreSet-method mDataNames mDataNames<-,CoreSet-method
> ###   mDataNames<-,CoreSet,ANY-method mDataNames<-
> ###   molecularProfilesSlot,CoreSet-method
> ###   moleculerProfilesSlot,CoreSet-method molecularProfilesSlot
> ###   molecularProfilesSlot<-,CoreSet,list_OR_MAE-method
> ###   molecularProfilesSlot<-,CoreSet,list-method
> ###   molecularProfilesSlot<-CoreSet,MultiAssayExperiment-method
> ###   molecularProfilesSlot<- sensitivityInfo,CoreSet-method
> ###   sensitivityInfo,CoreSet,missing-method
> ###   sensitivityInfo,CoreSet,character-method
> ###   sensitivityInfo<-,CoreSet,data.frame-method
> ###   sensitivityInfo<-,CoreSet,missing,data.frame-method
> ###   sensitvityInfo<-,CoreSet,character,data.frame-method
> ###   sensitivityMeasures,CoreSet-method
> ###   sensitivityMeasures<-,CoreSet,character-method
> ###   sensitivityProfiles,CoreSet-method
> ###   sensitivityProfiles<-,CoreSet,data.frame-method
> ###   sensitivityRaw,CoreSet-method sensitivityRaw<-,CoreSet,array-method
> ###   treatmentResponse,CoreSet-method treatmentResponse sensitivitySlot
> ###   treatmentResponse<-,CoreSet,list_OR_LongTable-method
> ###   treatmentResponse<- treamentResponse<-,CoreSet,list-method
> ###   treatmentResponse<-,CoreSet,LongTable-method sensitivitySlot<-
> ###   sensNumber,CoreSet-method sensNumber
> ###   sensNumber<-,CoreSet,matrix-method sensNumber<-
> ###   pertNumber,CoreSet-method pertNumber
> ###   pertNumber<-,CoreSet,array-method pertNumber<-
> 
> ### ** Examples
> 
> data(clevelandSmall_cSet)
> 
> ## @annotation
> 
> annotation(clevelandSmall_cSet)
$name
[1] "Cleveland"

$dateCreated
[1] "Wed Oct 25 17:38:42 2017"

$sessionInfo
R version 3.4.0 (2017-04-21)
Platform: x86_64-apple-darwin15.6.0 (64-bit)
Running under: macOS Sierra 10.12.6

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/3.4/Resources/lib/libRblas.0.dylib 
LAPACK: /Library/Frameworks/R.framework/Versions/3.4/Resources/lib/libRlapack.dylibError in grepl(LAver, lapack, fixed = TRUE) : invalid 'pattern' argument
Calls: <Anonymous> -> print.sessionInfo -> grepl
Execution halted
* checking for unstated dependencies in ‘tests’ ... OK
* checking tests ...
  Running ‘testthat.R’
 ERROR
Running the tests in ‘tests/testthat.R’ failed.
Last 13 lines of output:
  `actual$TESTDATE`:     
  `expected$TESTDATE`: NA
  
  `actual$PLATE`:     
  `expected$PLATE`: NA
  
  `actual$SCREENER`:     
  `expected$SCREENER`: NA
  
  `actual$PREFIX2`:     
  `expected$PREFIX2`: NA
  
  [ FAIL 3 | WARN 0 | SKIP 1 | PASS 128 ]
  Error: Test failures
  Execution halted
* checking for unstated dependencies in vignettes ... OK
* checking package vignettes in ‘inst/doc’ ... OK
* checking running R code from vignettes ...
  ‘TreatmentResponseExperiment.Rmd’ using ‘UTF-8’... OK
  ‘coreGx.Rmd’ using ‘UTF-8’... OK
 NONE
* checking re-building of vignette outputs ... OK
* checking PDF version of manual ... OK
* DONE

Status: 2 ERRORs, 5 NOTEs
See
  ‘/home/biocbuild/bbs-3.17-bioc/meat/CoreGx.Rcheck/00check.log’
for details.

