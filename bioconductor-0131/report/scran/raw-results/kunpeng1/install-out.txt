##############################################################################
##############################################################################
###
### Running command:
###
###   /home/biocbuild/bbs-3.17-bioc/R/bin/R CMD INSTALL scran
###
##############################################################################
##############################################################################


* installing to library ‘/home/biocbuild/bbs-3.17-bioc/R/site-library’
* installing *source* package ‘scran’ ...
** using staged installation
** libs
using C++ compiler: ‘g++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0’
using C++11
g++ -std=gnu++11 -I"/home/biocbuild/bbs-3.17-bioc/R/include" -DNDEBUG  -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/Rcpp/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/dqrng/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/scuttle/include' -I/usr/local/include    -fPIC  -g -O2  -Wall -c RcppExports.cpp -o RcppExports.o
g++ -std=gnu++11 -I"/home/biocbuild/bbs-3.17-bioc/R/include" -DNDEBUG  -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/Rcpp/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/dqrng/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/scuttle/include' -I/usr/local/include    -fPIC  -g -O2  -Wall -c choose_effect_size.cpp -o choose_effect_size.o
choose_effect_size.cpp: In instantiation of ‘size_t instantiate_list(Rcpp::List, std::vector<T>&, std::string) [with V = Rcpp::Vector<13>; size_t = long unsigned int; Rcpp::List = Rcpp::Vector<19>; std::string = std::__cxx11::basic_string<char>]’:
choose_effect_size.cpp:38:41:   required from here
choose_effect_size.cpp:13:23: warning: comparison of integer expressions of different signedness: ‘size_t’ {aka ‘long unsigned int’} and ‘R_xlen_t’ {aka ‘long int’} [-Wsign-compare]
   13 |     for (size_t c=0; c<input.size(); ++c) {
      |                      ~^~~~~~~~~~~~~
choose_effect_size.cpp: In instantiation of ‘size_t instantiate_list(Rcpp::List, std::vector<T>&, std::string) [with V = Rcpp::Vector<14, Rcpp::PreserveStorage>; size_t = long unsigned int; Rcpp::List = Rcpp::Vector<19>; std::string = std::__cxx11::basic_string<char>]’:
choose_effect_size.cpp:67:43:   required from here
choose_effect_size.cpp:13:23: warning: comparison of integer expressions of different signedness: ‘size_t’ {aka ‘long unsigned int’} and ‘R_xlen_t’ {aka ‘long int’} [-Wsign-compare]
g++ -std=gnu++11 -I"/home/biocbuild/bbs-3.17-bioc/R/include" -DNDEBUG  -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/Rcpp/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/dqrng/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/scuttle/include' -I/usr/local/include    -fPIC  -g -O2  -Wall -c combine_rho.cpp -o combine_rho.o
g++ -std=gnu++11 -I"/home/biocbuild/bbs-3.17-bioc/R/include" -DNDEBUG  -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/Rcpp/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/dqrng/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/scuttle/include' -I/usr/local/include    -fPIC  -g -O2  -Wall -c compute_blocked_stats.cpp -o compute_blocked_stats.o
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:12,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:11,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/beachmat.h:24,
                 from compute_blocked_stats.cpp:2:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::SparseArraySeed_reader<V, TIT>::SparseArraySeed_reader(Rcpp::RObject) [with V = Rcpp::Vector<13>; TIT = const int*; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:561:46:   required from ‘beachmat::lin_SparseArraySeed<V, TIT>::lin_SparseArraySeed(Rcpp::RObject) [with V = Rcpp::Vector<13>; TIT = const int*; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:36:39:   required from ‘std::unique_ptr<_Codecvt> beachmat::read_lin_sparse_block_raw(Rcpp::RObject) [with M = beachmat::lin_matrix; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:65:57:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:535:17: warning: comparison of integer expressions of different signedness: ‘const size_t’ {aka ‘const long unsigned int’} and ‘R_xlen_t’ {aka ‘long int’} [-Wsign-compare]
  535 |         if (nnz != x.size()) {
      |             ~~~~^~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:551:45: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  551 |                     if (lastR <= 0 || lastR > NR || lastC <= 0 || lastC > NC) {
      |                                       ~~~~~~^~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:551:73: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  551 |                     if (lastR <= 0 || lastR > NR || lastC <= 0 || lastC > NC) {
      |                                                                   ~~~~~~^~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:593:35: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  593 |                 for (int v = 0; v < nnz; ++v, ++rowIt, ++colIt, ++xIt) {
      |                                 ~~^~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::SparseArraySeed_reader<V, TIT>::SparseArraySeed_reader(Rcpp::RObject) [with V = Rcpp::Vector<14, Rcpp::PreserveStorage>; TIT = const double*; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:561:46:   required from ‘beachmat::lin_SparseArraySeed<V, TIT>::lin_SparseArraySeed(Rcpp::RObject) [with V = Rcpp::Vector<14, Rcpp::PreserveStorage>; TIT = const double*; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:38:39:   required from ‘std::unique_ptr<_Codecvt> beachmat::read_lin_sparse_block_raw(Rcpp::RObject) [with M = beachmat::lin_matrix; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:65:57:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:535:17: warning: comparison of integer expressions of different signedness: ‘const size_t’ {aka ‘const long unsigned int’} and ‘R_xlen_t’ {aka ‘long int’} [-Wsign-compare]
  535 |         if (nnz != x.size()) {
      |             ~~~~^~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:551:45: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  551 |                     if (lastR <= 0 || lastR > NR || lastC <= 0 || lastC > NC) {
      |                                       ~~~~~~^~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:551:73: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  551 |                     if (lastR <= 0 || lastR > NR || lastC <= 0 || lastC > NC) {
      |                                                                   ~~~~~~^~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:593:35: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  593 |                 for (int v = 0; v < nnz; ++v, ++rowIt, ++colIt, ++xIt) {
      |                                 ~~^~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::SparseArraySeed_reader<V, TIT>::SparseArraySeed_reader(Rcpp::RObject) [with V = Rcpp::Vector<10, Rcpp::PreserveStorage>; TIT = const int*; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:561:46:   required from ‘beachmat::lin_SparseArraySeed<V, TIT>::lin_SparseArraySeed(Rcpp::RObject) [with V = Rcpp::Vector<10, Rcpp::PreserveStorage>; TIT = const int*; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:40:39:   required from ‘std::unique_ptr<_Codecvt> beachmat::read_lin_sparse_block_raw(Rcpp::RObject) [with M = beachmat::lin_matrix; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:65:57:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:535:17: warning: comparison of integer expressions of different signedness: ‘const size_t’ {aka ‘const long unsigned int’} and ‘R_xlen_t’ {aka ‘long int’} [-Wsign-compare]
  535 |         if (nnz != x.size()) {
      |             ~~~~^~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:551:45: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  551 |                     if (lastR <= 0 || lastR > NR || lastC <= 0 || lastC > NC) {
      |                                       ~~~~~~^~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:551:73: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  551 |                     if (lastR <= 0 || lastR > NR || lastC <= 0 || lastC > NC) {
      |                                                                   ~~~~~~^~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:593:35: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  593 |                 for (int v = 0; v < nnz; ++v, ++rowIt, ++colIt, ++xIt) {
      |                                 ~~^~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::sparse_index<OUT, I> beachmat::Csparse_core<TIT, I, P>::get_row(size_t, ALT, I*, size_t, size_t) [with OUT = const int*; ALT = int*; TIT = const double*; I = int; P = long unsigned int; size_t = long unsigned int]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:650:42:   required from ‘beachmat::sparse_index<OUT, int> beachmat::SparseArraySeed_reader<V, TIT>::get_row(size_t, ALT, int*, size_t, size_t) [with OUT = const int*; ALT = int*; V = Rcpp::Vector<14, Rcpp::PreserveStorage>; TIT = const double*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:596:51:   required from ‘beachmat::sparse_index<const int*, int> beachmat::lin_SparseArraySeed<V, TIT>::get_row(size_t, int*, int*, size_t, size_t) [with V = Rcpp::Vector<14, Rcpp::PreserveStorage>; TIT = const double*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:595:35:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:250:22: warning: comparison of integer expressions of different signedness: ‘const int’ and ‘const long unsigned int’ [-Wsign-compare]
  250 |             if (idex != *pIt && static_cast<size_t>(i[idex]) == r) {
      |                 ~~~~~^~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::sparse_index<OUT, I> beachmat::Csparse_core<TIT, I, P>::get_row(size_t, ALT, I*, size_t, size_t) [with OUT = const double*; ALT = double*; TIT = const double*; I = int; P = long unsigned int; size_t = long unsigned int]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:650:42:   required from ‘beachmat::sparse_index<OUT, int> beachmat::SparseArraySeed_reader<V, TIT>::get_row(size_t, ALT, int*, size_t, size_t) [with OUT = const double*; ALT = double*; V = Rcpp::Vector<14, Rcpp::PreserveStorage>; TIT = const double*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:602:54:   required from ‘beachmat::sparse_index<const double*, int> beachmat::lin_SparseArraySeed<V, TIT>::get_row(size_t, double*, int*, size_t, size_t) [with V = Rcpp::Vector<14, Rcpp::PreserveStorage>; TIT = const double*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:601:38:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:250:22: warning: comparison of integer expressions of different signedness: ‘const int’ and ‘const long unsigned int’ [-Wsign-compare]
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::sparse_index<OUT, I> beachmat::Csparse_core<TIT, I, P>::get_row(size_t, ALT, I*, size_t, size_t) [with OUT = const int*; ALT = int*; TIT = const int*; I = int; P = long unsigned int; size_t = long unsigned int]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:650:42:   required from ‘beachmat::sparse_index<OUT, int> beachmat::SparseArraySeed_reader<V, TIT>::get_row(size_t, ALT, int*, size_t, size_t) [with OUT = const int*; ALT = int*; V = Rcpp::Vector<10, Rcpp::PreserveStorage>; TIT = const int*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:596:51:   required from ‘beachmat::sparse_index<const int*, int> beachmat::lin_SparseArraySeed<V, TIT>::get_row(size_t, int*, int*, size_t, size_t) [with V = Rcpp::Vector<10, Rcpp::PreserveStorage>; TIT = const int*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:595:35:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:250:22: warning: comparison of integer expressions of different signedness: ‘const int’ and ‘const long unsigned int’ [-Wsign-compare]
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::sparse_index<OUT, I> beachmat::Csparse_core<TIT, I, P>::get_row(size_t, ALT, I*, size_t, size_t) [with OUT = const double*; ALT = double*; TIT = const int*; I = int; P = long unsigned int; size_t = long unsigned int]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:650:42:   required from ‘beachmat::sparse_index<OUT, int> beachmat::SparseArraySeed_reader<V, TIT>::get_row(size_t, ALT, int*, size_t, size_t) [with OUT = const double*; ALT = double*; V = Rcpp::Vector<10, Rcpp::PreserveStorage>; TIT = const int*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:602:54:   required from ‘beachmat::sparse_index<const double*, int> beachmat::lin_SparseArraySeed<V, TIT>::get_row(size_t, double*, int*, size_t, size_t) [with V = Rcpp::Vector<10, Rcpp::PreserveStorage>; TIT = const int*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:601:38:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:250:22: warning: comparison of integer expressions of different signedness: ‘const int’ and ‘const long unsigned int’ [-Wsign-compare]
g++ -std=gnu++11 -I"/home/biocbuild/bbs-3.17-bioc/R/include" -DNDEBUG  -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/Rcpp/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/dqrng/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/scuttle/include' -I/usr/local/include    -fPIC  -g -O2  -Wall -c compute_residual_stats.cpp -o compute_residual_stats.o
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:12,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:11,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/beachmat.h:24,
                 from compute_residual_stats.cpp:2:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::SparseArraySeed_reader<V, TIT>::SparseArraySeed_reader(Rcpp::RObject) [with V = Rcpp::Vector<13>; TIT = const int*; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:561:46:   required from ‘beachmat::lin_SparseArraySeed<V, TIT>::lin_SparseArraySeed(Rcpp::RObject) [with V = Rcpp::Vector<13>; TIT = const int*; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:36:39:   required from ‘std::unique_ptr<_Codecvt> beachmat::read_lin_sparse_block_raw(Rcpp::RObject) [with M = beachmat::lin_matrix; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:65:57:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:535:17: warning: comparison of integer expressions of different signedness: ‘const size_t’ {aka ‘const long unsigned int’} and ‘R_xlen_t’ {aka ‘long int’} [-Wsign-compare]
  535 |         if (nnz != x.size()) {
      |             ~~~~^~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:551:45: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  551 |                     if (lastR <= 0 || lastR > NR || lastC <= 0 || lastC > NC) {
      |                                       ~~~~~~^~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:551:73: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  551 |                     if (lastR <= 0 || lastR > NR || lastC <= 0 || lastC > NC) {
      |                                                                   ~~~~~~^~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:593:35: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  593 |                 for (int v = 0; v < nnz; ++v, ++rowIt, ++colIt, ++xIt) {
      |                                 ~~^~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::SparseArraySeed_reader<V, TIT>::SparseArraySeed_reader(Rcpp::RObject) [with V = Rcpp::Vector<14, Rcpp::PreserveStorage>; TIT = const double*; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:561:46:   required from ‘beachmat::lin_SparseArraySeed<V, TIT>::lin_SparseArraySeed(Rcpp::RObject) [with V = Rcpp::Vector<14, Rcpp::PreserveStorage>; TIT = const double*; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:38:39:   required from ‘std::unique_ptr<_Codecvt> beachmat::read_lin_sparse_block_raw(Rcpp::RObject) [with M = beachmat::lin_matrix; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:65:57:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:535:17: warning: comparison of integer expressions of different signedness: ‘const size_t’ {aka ‘const long unsigned int’} and ‘R_xlen_t’ {aka ‘long int’} [-Wsign-compare]
  535 |         if (nnz != x.size()) {
      |             ~~~~^~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:551:45: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  551 |                     if (lastR <= 0 || lastR > NR || lastC <= 0 || lastC > NC) {
      |                                       ~~~~~~^~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:551:73: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  551 |                     if (lastR <= 0 || lastR > NR || lastC <= 0 || lastC > NC) {
      |                                                                   ~~~~~~^~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:593:35: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  593 |                 for (int v = 0; v < nnz; ++v, ++rowIt, ++colIt, ++xIt) {
      |                                 ~~^~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::SparseArraySeed_reader<V, TIT>::SparseArraySeed_reader(Rcpp::RObject) [with V = Rcpp::Vector<10, Rcpp::PreserveStorage>; TIT = const int*; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:561:46:   required from ‘beachmat::lin_SparseArraySeed<V, TIT>::lin_SparseArraySeed(Rcpp::RObject) [with V = Rcpp::Vector<10, Rcpp::PreserveStorage>; TIT = const int*; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:40:39:   required from ‘std::unique_ptr<_Codecvt> beachmat::read_lin_sparse_block_raw(Rcpp::RObject) [with M = beachmat::lin_matrix; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:65:57:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:535:17: warning: comparison of integer expressions of different signedness: ‘const size_t’ {aka ‘const long unsigned int’} and ‘R_xlen_t’ {aka ‘long int’} [-Wsign-compare]
  535 |         if (nnz != x.size()) {
      |             ~~~~^~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:551:45: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  551 |                     if (lastR <= 0 || lastR > NR || lastC <= 0 || lastC > NC) {
      |                                       ~~~~~~^~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:551:73: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  551 |                     if (lastR <= 0 || lastR > NR || lastC <= 0 || lastC > NC) {
      |                                                                   ~~~~~~^~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:593:35: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  593 |                 for (int v = 0; v < nnz; ++v, ++rowIt, ++colIt, ++xIt) {
      |                                 ~~^~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::sparse_index<OUT, I> beachmat::Csparse_core<TIT, I, P>::get_row(size_t, ALT, I*, size_t, size_t) [with OUT = const int*; ALT = int*; TIT = const double*; I = int; P = long unsigned int; size_t = long unsigned int]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:650:42:   required from ‘beachmat::sparse_index<OUT, int> beachmat::SparseArraySeed_reader<V, TIT>::get_row(size_t, ALT, int*, size_t, size_t) [with OUT = const int*; ALT = int*; V = Rcpp::Vector<14, Rcpp::PreserveStorage>; TIT = const double*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:596:51:   required from ‘beachmat::sparse_index<const int*, int> beachmat::lin_SparseArraySeed<V, TIT>::get_row(size_t, int*, int*, size_t, size_t) [with V = Rcpp::Vector<14, Rcpp::PreserveStorage>; TIT = const double*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:595:35:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:250:22: warning: comparison of integer expressions of different signedness: ‘const int’ and ‘const long unsigned int’ [-Wsign-compare]
  250 |             if (idex != *pIt && static_cast<size_t>(i[idex]) == r) {
      |                 ~~~~~^~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::sparse_index<OUT, I> beachmat::Csparse_core<TIT, I, P>::get_row(size_t, ALT, I*, size_t, size_t) [with OUT = const double*; ALT = double*; TIT = const double*; I = int; P = long unsigned int; size_t = long unsigned int]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:650:42:   required from ‘beachmat::sparse_index<OUT, int> beachmat::SparseArraySeed_reader<V, TIT>::get_row(size_t, ALT, int*, size_t, size_t) [with OUT = const double*; ALT = double*; V = Rcpp::Vector<14, Rcpp::PreserveStorage>; TIT = const double*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:602:54:   required from ‘beachmat::sparse_index<const double*, int> beachmat::lin_SparseArraySeed<V, TIT>::get_row(size_t, double*, int*, size_t, size_t) [with V = Rcpp::Vector<14, Rcpp::PreserveStorage>; TIT = const double*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:601:38:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:250:22: warning: comparison of integer expressions of different signedness: ‘const int’ and ‘const long unsigned int’ [-Wsign-compare]
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::sparse_index<OUT, I> beachmat::Csparse_core<TIT, I, P>::get_row(size_t, ALT, I*, size_t, size_t) [with OUT = const int*; ALT = int*; TIT = const int*; I = int; P = long unsigned int; size_t = long unsigned int]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:650:42:   required from ‘beachmat::sparse_index<OUT, int> beachmat::SparseArraySeed_reader<V, TIT>::get_row(size_t, ALT, int*, size_t, size_t) [with OUT = const int*; ALT = int*; V = Rcpp::Vector<10, Rcpp::PreserveStorage>; TIT = const int*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:596:51:   required from ‘beachmat::sparse_index<const int*, int> beachmat::lin_SparseArraySeed<V, TIT>::get_row(size_t, int*, int*, size_t, size_t) [with V = Rcpp::Vector<10, Rcpp::PreserveStorage>; TIT = const int*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:595:35:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:250:22: warning: comparison of integer expressions of different signedness: ‘const int’ and ‘const long unsigned int’ [-Wsign-compare]
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::sparse_index<OUT, I> beachmat::Csparse_core<TIT, I, P>::get_row(size_t, ALT, I*, size_t, size_t) [with OUT = const double*; ALT = double*; TIT = const int*; I = int; P = long unsigned int; size_t = long unsigned int]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:650:42:   required from ‘beachmat::sparse_index<OUT, int> beachmat::SparseArraySeed_reader<V, TIT>::get_row(size_t, ALT, int*, size_t, size_t) [with OUT = const double*; ALT = double*; V = Rcpp::Vector<10, Rcpp::PreserveStorage>; TIT = const int*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:602:54:   required from ‘beachmat::sparse_index<const double*, int> beachmat::lin_SparseArraySeed<V, TIT>::get_row(size_t, double*, int*, size_t, size_t) [with V = Rcpp::Vector<10, Rcpp::PreserveStorage>; TIT = const int*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:601:38:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:250:22: warning: comparison of integer expressions of different signedness: ‘const int’ and ‘const long unsigned int’ [-Wsign-compare]
g++ -std=gnu++11 -I"/home/biocbuild/bbs-3.17-bioc/R/include" -DNDEBUG  -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/Rcpp/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/dqrng/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/scuttle/include' -I/usr/local/include    -fPIC  -g -O2  -Wall -c compute_rho_null.cpp -o compute_rho_null.o
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/mpl/aux_/na_assert.hpp:23,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/mpl/arg.hpp:25,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/mpl/placeholders.hpp:24,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/iterator/iterator_categories.hpp:16,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:10,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/mpl/assert.hpp:194:21: warning: unnecessary parentheses in declaration of ‘assert_arg’ [-Wparentheses]
  194 | failed ************ (Pred::************
      |                     ^~~~~~~~~~~~~~~~~~~
  195 |       assert_arg( void (*)(Pred), typename assert_arg_pred<Pred>::type )
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  196 |     );
      |     ~                
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/mpl/assert.hpp:194:21: note: remove parentheses
  194 | failed ************ (Pred::************
      |                     ^~~~~~~~~~~~~~~~~~~
      |                     -
  195 |       assert_arg( void (*)(Pred), typename assert_arg_pred<Pred>::type )
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  196 |     );
      |     ~                
      |     -
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/mpl/assert.hpp:199:21: warning: unnecessary parentheses in declaration of ‘assert_not_arg’ [-Wparentheses]
  199 | failed ************ (boost::mpl::not_<Pred>::************
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  200 |       assert_not_arg( void (*)(Pred), typename assert_arg_pred_not<Pred>::type )
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  201 |     );
      |     ~                
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/mpl/assert.hpp:199:21: note: remove parentheses
  199 | failed ************ (boost::mpl::not_<Pred>::************
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                     -
  200 |       assert_not_arg( void (*)(Pred), typename assert_arg_pred_not<Pred>::type )
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  201 |     );
      |     ~                
      |     -
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   required from ‘struct boost::SinglePassRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:318:12:   required from ‘struct boost::ForwardRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:352:12:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:281:9:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:281:9:   required from ‘struct boost::SinglePassRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:318:12:   required from ‘struct boost::ForwardRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:352:12:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<std::vector<int> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:318:12:   required from ‘struct boost::ForwardRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:352:12:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<std::vector<int> >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:137:5:   required from ‘struct boost::DefaultConstructible<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:181:16:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:191:13:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:191:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:321:9:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::forward_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:197:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:321:9:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:321:9:   required from ‘struct boost::ForwardRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:352:12:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::ForwardIteratorConcept<Iterator>::~ForwardIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:197:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  197 |             BOOST_CONCEPT_USAGE(ForwardIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:137:5:   required from ‘struct boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:181:16:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:197:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:322:9:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:322:9:   required from ‘struct boost::ForwardRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:352:12:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::ForwardIteratorConcept<Iterator>::~ForwardIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:197:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  197 |             BOOST_CONCEPT_USAGE(ForwardIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:218:14:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:218:14:   required from ‘struct boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:355:9:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::bidirectional_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:224:14:   required from ‘struct boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:355:9:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:355:9:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::BidirectionalIteratorConcept<Iterator>::~BidirectionalIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:224:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  224 |              BOOST_CONCEPT_USAGE(BidirectionalIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:224:14:   required from ‘struct boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:356:9:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:356:9:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::BidirectionalIteratorConcept<Iterator>::~BidirectionalIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:224:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  224 |              BOOST_CONCEPT_USAGE(BidirectionalIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:239:14:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:239:14:   required from ‘struct boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::random_access_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:245:14:   required from ‘struct boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:373:9:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::RandomAccessIteratorConcept<Iterator>::~RandomAccessIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:245:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  245 |              BOOST_CONCEPT_USAGE(RandomAccessIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:245:14:   required from ‘struct boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:374:9:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::RandomAccessIteratorConcept<Iterator>::~RandomAccessIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:245:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  245 |              BOOST_CONCEPT_USAGE(RandomAccessIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:370:12: note: in a call to non-static member function ‘boost::RandomAccessRangeConcept<std::vector<int> >::~RandomAccessRangeConcept()’
  370 |     struct RandomAccessRangeConcept : BidirectionalRangeConcept<T>
      |            ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:136:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:136:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<std::vector<int> >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:318:12:   required from ‘struct boost::ForwardRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:352:12:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<int> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = std::vector<int>]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:137:5:   required from ‘struct boost::DefaultConstructible<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:181:16:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::DefaultConstructible<TT>::~DefaultConstructible() [with TT = __gnu_cxx::__normal_iterator<int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:137:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  137 |     BOOST_CONCEPT_USAGE(DefaultConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::forward_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:197:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::ForwardIteratorConcept<Iterator>::~ForwardIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:197:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  197 |             BOOST_CONCEPT_USAGE(ForwardIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:137:5:   required from ‘struct boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:181:16:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::DefaultConstructible<TT>::~DefaultConstructible() [with TT = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:137:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  137 |     BOOST_CONCEPT_USAGE(DefaultConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:197:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::ForwardIteratorConcept<Iterator>::~ForwardIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:197:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  197 |             BOOST_CONCEPT_USAGE(ForwardIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::bidirectional_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:224:14:   required from ‘struct boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::BidirectionalIteratorConcept<Iterator>::~BidirectionalIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:224:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  224 |              BOOST_CONCEPT_USAGE(BidirectionalIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:224:14:   required from ‘struct boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::BidirectionalIteratorConcept<Iterator>::~BidirectionalIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:224:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  224 |              BOOST_CONCEPT_USAGE(BidirectionalIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::random_access_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:245:14:   required from ‘struct boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::RandomAccessIteratorConcept<Iterator>::~RandomAccessIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:245:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  245 |              BOOST_CONCEPT_USAGE(RandomAccessIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:245:14:   required from ‘struct boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::RandomAccessIteratorConcept<Iterator>::~RandomAccessIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:245:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  245 |              BOOST_CONCEPT_USAGE(RandomAccessIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
g++ -std=gnu++11 -I"/home/biocbuild/bbs-3.17-bioc/R/include" -DNDEBUG  -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/Rcpp/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/dqrng/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/scuttle/include' -I/usr/local/include    -fPIC  -g -O2  -Wall -c cyclone_scores.cpp -o cyclone_scores.o
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/mpl/aux_/na_assert.hpp:23,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/mpl/arg.hpp:25,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/mpl/placeholders.hpp:24,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/iterator/iterator_categories.hpp:16,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:10,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/mpl/assert.hpp:194:21: warning: unnecessary parentheses in declaration of ‘assert_arg’ [-Wparentheses]
  194 | failed ************ (Pred::************
      |                     ^~~~~~~~~~~~~~~~~~~
  195 |       assert_arg( void (*)(Pred), typename assert_arg_pred<Pred>::type )
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  196 |     );
      |     ~                
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/mpl/assert.hpp:194:21: note: remove parentheses
  194 | failed ************ (Pred::************
      |                     ^~~~~~~~~~~~~~~~~~~
      |                     -
  195 |       assert_arg( void (*)(Pred), typename assert_arg_pred<Pred>::type )
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  196 |     );
      |     ~                
      |     -
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/mpl/assert.hpp:199:21: warning: unnecessary parentheses in declaration of ‘assert_not_arg’ [-Wparentheses]
  199 | failed ************ (boost::mpl::not_<Pred>::************
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  200 |       assert_not_arg( void (*)(Pred), typename assert_arg_pred_not<Pred>::type )
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  201 |     );
      |     ~                
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/mpl/assert.hpp:199:21: note: remove parentheses
  199 | failed ************ (boost::mpl::not_<Pred>::************
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                     -
  200 |       assert_not_arg( void (*)(Pred), typename assert_arg_pred_not<Pred>::type )
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  201 |     );
      |     ~                
      |     -
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   required from ‘struct boost::SinglePassRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:318:12:   required from ‘struct boost::ForwardRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:352:12:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:281:9:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:281:9:   required from ‘struct boost::SinglePassRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:318:12:   required from ‘struct boost::ForwardRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:352:12:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<std::vector<double> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:318:12:   required from ‘struct boost::ForwardRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:352:12:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<std::vector<double> >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:137:5:   required from ‘struct boost::DefaultConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:181:16:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:191:13:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:191:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:321:9:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::forward_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:197:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:321:9:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:321:9:   required from ‘struct boost::ForwardRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:352:12:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::ForwardIteratorConcept<Iterator>::~ForwardIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:197:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  197 |             BOOST_CONCEPT_USAGE(ForwardIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:137:5:   required from ‘struct boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:181:16:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:197:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:322:9:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:322:9:   required from ‘struct boost::ForwardRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:352:12:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::ForwardIteratorConcept<Iterator>::~ForwardIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:197:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  197 |             BOOST_CONCEPT_USAGE(ForwardIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:218:14:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:218:14:   required from ‘struct boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:355:9:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::bidirectional_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:224:14:   required from ‘struct boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:355:9:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:355:9:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::BidirectionalIteratorConcept<Iterator>::~BidirectionalIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:224:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  224 |              BOOST_CONCEPT_USAGE(BidirectionalIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:224:14:   required from ‘struct boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:356:9:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:356:9:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::BidirectionalIteratorConcept<Iterator>::~BidirectionalIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:224:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  224 |              BOOST_CONCEPT_USAGE(BidirectionalIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:239:14:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:239:14:   required from ‘struct boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::random_access_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:245:14:   required from ‘struct boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:373:9:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::RandomAccessIteratorConcept<Iterator>::~RandomAccessIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:245:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  245 |              BOOST_CONCEPT_USAGE(RandomAccessIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:245:14:   required from ‘struct boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:374:9:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::RandomAccessIteratorConcept<Iterator>::~RandomAccessIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:245:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  245 |              BOOST_CONCEPT_USAGE(RandomAccessIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:370:12: note: in a call to non-static member function ‘boost::RandomAccessRangeConcept<std::vector<double> >::~RandomAccessRangeConcept()’
  370 |     struct RandomAccessRangeConcept : BidirectionalRangeConcept<T>
      |            ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:12,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:11,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/beachmat.h:24,
                 from cyclone_scores.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::SparseArraySeed_reader<V, TIT>::SparseArraySeed_reader(Rcpp::RObject) [with V = Rcpp::Vector<13>; TIT = const int*; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:561:46:   required from ‘beachmat::lin_SparseArraySeed<V, TIT>::lin_SparseArraySeed(Rcpp::RObject) [with V = Rcpp::Vector<13>; TIT = const int*; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:36:39:   required from ‘std::unique_ptr<_Codecvt> beachmat::read_lin_sparse_block_raw(Rcpp::RObject) [with M = beachmat::lin_matrix; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:65:57:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:535:17: warning: comparison of integer expressions of different signedness: ‘const size_t’ {aka ‘const long unsigned int’} and ‘R_xlen_t’ {aka ‘long int’} [-Wsign-compare]
  535 |         if (nnz != x.size()) {
      |             ~~~~^~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:551:45: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  551 |                     if (lastR <= 0 || lastR > NR || lastC <= 0 || lastC > NC) {
      |                                       ~~~~~~^~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:551:73: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  551 |                     if (lastR <= 0 || lastR > NR || lastC <= 0 || lastC > NC) {
      |                                                                   ~~~~~~^~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:593:35: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  593 |                 for (int v = 0; v < nnz; ++v, ++rowIt, ++colIt, ++xIt) {
      |                                 ~~^~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::SparseArraySeed_reader<V, TIT>::SparseArraySeed_reader(Rcpp::RObject) [with V = Rcpp::Vector<14, Rcpp::PreserveStorage>; TIT = const double*; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:561:46:   required from ‘beachmat::lin_SparseArraySeed<V, TIT>::lin_SparseArraySeed(Rcpp::RObject) [with V = Rcpp::Vector<14, Rcpp::PreserveStorage>; TIT = const double*; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:38:39:   required from ‘std::unique_ptr<_Codecvt> beachmat::read_lin_sparse_block_raw(Rcpp::RObject) [with M = beachmat::lin_matrix; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:65:57:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:535:17: warning: comparison of integer expressions of different signedness: ‘const size_t’ {aka ‘const long unsigned int’} and ‘R_xlen_t’ {aka ‘long int’} [-Wsign-compare]
  535 |         if (nnz != x.size()) {
      |             ~~~~^~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:551:45: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  551 |                     if (lastR <= 0 || lastR > NR || lastC <= 0 || lastC > NC) {
      |                                       ~~~~~~^~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:551:73: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  551 |                     if (lastR <= 0 || lastR > NR || lastC <= 0 || lastC > NC) {
      |                                                                   ~~~~~~^~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:593:35: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  593 |                 for (int v = 0; v < nnz; ++v, ++rowIt, ++colIt, ++xIt) {
      |                                 ~~^~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::SparseArraySeed_reader<V, TIT>::SparseArraySeed_reader(Rcpp::RObject) [with V = Rcpp::Vector<10, Rcpp::PreserveStorage>; TIT = const int*; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:561:46:   required from ‘beachmat::lin_SparseArraySeed<V, TIT>::lin_SparseArraySeed(Rcpp::RObject) [with V = Rcpp::Vector<10, Rcpp::PreserveStorage>; TIT = const int*; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:40:39:   required from ‘std::unique_ptr<_Codecvt> beachmat::read_lin_sparse_block_raw(Rcpp::RObject) [with M = beachmat::lin_matrix; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:65:57:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:535:17: warning: comparison of integer expressions of different signedness: ‘const size_t’ {aka ‘const long unsigned int’} and ‘R_xlen_t’ {aka ‘long int’} [-Wsign-compare]
  535 |         if (nnz != x.size()) {
      |             ~~~~^~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:551:45: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  551 |                     if (lastR <= 0 || lastR > NR || lastC <= 0 || lastC > NC) {
      |                                       ~~~~~~^~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:551:73: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  551 |                     if (lastR <= 0 || lastR > NR || lastC <= 0 || lastC > NC) {
      |                                                                   ~~~~~~^~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:593:35: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  593 |                 for (int v = 0; v < nnz; ++v, ++rowIt, ++colIt, ++xIt) {
      |                                 ~~^~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:136:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:136:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<std::vector<double> >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:318:12:   required from ‘struct boost::ForwardRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:352:12:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<double> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = std::vector<double>]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:137:5:   required from ‘struct boost::DefaultConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:181:16:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::DefaultConstructible<TT>::~DefaultConstructible() [with TT = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:137:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  137 |     BOOST_CONCEPT_USAGE(DefaultConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::forward_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:197:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::ForwardIteratorConcept<Iterator>::~ForwardIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:197:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  197 |             BOOST_CONCEPT_USAGE(ForwardIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:137:5:   required from ‘struct boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:181:16:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::DefaultConstructible<TT>::~DefaultConstructible() [with TT = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:137:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  137 |     BOOST_CONCEPT_USAGE(DefaultConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:197:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::ForwardIteratorConcept<Iterator>::~ForwardIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:197:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  197 |             BOOST_CONCEPT_USAGE(ForwardIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::bidirectional_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:224:14:   required from ‘struct boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::BidirectionalIteratorConcept<Iterator>::~BidirectionalIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:224:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  224 |              BOOST_CONCEPT_USAGE(BidirectionalIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:224:14:   required from ‘struct boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::BidirectionalIteratorConcept<Iterator>::~BidirectionalIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:224:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  224 |              BOOST_CONCEPT_USAGE(BidirectionalIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::random_access_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:245:14:   required from ‘struct boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::RandomAccessIteratorConcept<Iterator>::~RandomAccessIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:245:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  245 |              BOOST_CONCEPT_USAGE(RandomAccessIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:245:14:   required from ‘struct boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::RandomAccessIteratorConcept<Iterator>::~RandomAccessIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:245:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  245 |              BOOST_CONCEPT_USAGE(RandomAccessIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:12,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:11,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/beachmat.h:24,
                 from cyclone_scores.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::sparse_index<OUT, I> beachmat::Csparse_core<TIT, I, P>::get_row(size_t, ALT, I*, size_t, size_t) [with OUT = const int*; ALT = int*; TIT = const double*; I = int; P = long unsigned int; size_t = long unsigned int]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:650:42:   required from ‘beachmat::sparse_index<OUT, int> beachmat::SparseArraySeed_reader<V, TIT>::get_row(size_t, ALT, int*, size_t, size_t) [with OUT = const int*; ALT = int*; V = Rcpp::Vector<14, Rcpp::PreserveStorage>; TIT = const double*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:596:51:   required from ‘beachmat::sparse_index<const int*, int> beachmat::lin_SparseArraySeed<V, TIT>::get_row(size_t, int*, int*, size_t, size_t) [with V = Rcpp::Vector<14, Rcpp::PreserveStorage>; TIT = const double*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:595:35:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:250:22: warning: comparison of integer expressions of different signedness: ‘const int’ and ‘const long unsigned int’ [-Wsign-compare]
  250 |             if (idex != *pIt && static_cast<size_t>(i[idex]) == r) {
      |                 ~~~~~^~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::sparse_index<OUT, I> beachmat::Csparse_core<TIT, I, P>::get_row(size_t, ALT, I*, size_t, size_t) [with OUT = const double*; ALT = double*; TIT = const double*; I = int; P = long unsigned int; size_t = long unsigned int]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:650:42:   required from ‘beachmat::sparse_index<OUT, int> beachmat::SparseArraySeed_reader<V, TIT>::get_row(size_t, ALT, int*, size_t, size_t) [with OUT = const double*; ALT = double*; V = Rcpp::Vector<14, Rcpp::PreserveStorage>; TIT = const double*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:602:54:   required from ‘beachmat::sparse_index<const double*, int> beachmat::lin_SparseArraySeed<V, TIT>::get_row(size_t, double*, int*, size_t, size_t) [with V = Rcpp::Vector<14, Rcpp::PreserveStorage>; TIT = const double*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:601:38:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:250:22: warning: comparison of integer expressions of different signedness: ‘const int’ and ‘const long unsigned int’ [-Wsign-compare]
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::sparse_index<OUT, I> beachmat::Csparse_core<TIT, I, P>::get_row(size_t, ALT, I*, size_t, size_t) [with OUT = const int*; ALT = int*; TIT = const int*; I = int; P = long unsigned int; size_t = long unsigned int]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:650:42:   required from ‘beachmat::sparse_index<OUT, int> beachmat::SparseArraySeed_reader<V, TIT>::get_row(size_t, ALT, int*, size_t, size_t) [with OUT = const int*; ALT = int*; V = Rcpp::Vector<10, Rcpp::PreserveStorage>; TIT = const int*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:596:51:   required from ‘beachmat::sparse_index<const int*, int> beachmat::lin_SparseArraySeed<V, TIT>::get_row(size_t, int*, int*, size_t, size_t) [with V = Rcpp::Vector<10, Rcpp::PreserveStorage>; TIT = const int*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:595:35:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:250:22: warning: comparison of integer expressions of different signedness: ‘const int’ and ‘const long unsigned int’ [-Wsign-compare]
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::sparse_index<OUT, I> beachmat::Csparse_core<TIT, I, P>::get_row(size_t, ALT, I*, size_t, size_t) [with OUT = const double*; ALT = double*; TIT = const int*; I = int; P = long unsigned int; size_t = long unsigned int]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:650:42:   required from ‘beachmat::sparse_index<OUT, int> beachmat::SparseArraySeed_reader<V, TIT>::get_row(size_t, ALT, int*, size_t, size_t) [with OUT = const double*; ALT = double*; V = Rcpp::Vector<10, Rcpp::PreserveStorage>; TIT = const int*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:602:54:   required from ‘beachmat::sparse_index<const double*, int> beachmat::lin_SparseArraySeed<V, TIT>::get_row(size_t, double*, int*, size_t, size_t) [with V = Rcpp::Vector<10, Rcpp::PreserveStorage>; TIT = const int*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:601:38:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:250:22: warning: comparison of integer expressions of different signedness: ‘const int’ and ‘const long unsigned int’ [-Wsign-compare]
g++ -std=gnu++11 -I"/home/biocbuild/bbs-3.17-bioc/R/include" -DNDEBUG  -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/Rcpp/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/dqrng/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/scuttle/include' -I/usr/local/include    -fPIC  -g -O2  -Wall -c overlap_exprs.cpp -o overlap_exprs.o
overlap_exprs.cpp: In function ‘Rcpp::NumericMatrix overlap_exprs_paired(Rcpp::RObject, Rcpp::IntegerVector, Rcpp::IntegerVector, Rcpp::List, double)’:
overlap_exprs.cpp:214:27: warning: comparison of integer expressions of different signedness: ‘size_t’ {aka ‘long unsigned int’} and ‘R_xlen_t’ {aka ‘long int’} [-Wsign-compare]
  214 |         for (size_t i=0; i<left.size(); ++i, ++oIt) {
      |                          ~^~~~~~~~~~~~
overlap_exprs.cpp:202:18: warning: unused variable ‘ngroups’ [-Wunused-variable]
  202 |     const size_t ngroups=groups.size();
      |                  ^~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:12,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:11,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/beachmat.h:24,
                 from overlap_exprs.cpp:3:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::SparseArraySeed_reader<V, TIT>::SparseArraySeed_reader(Rcpp::RObject) [with V = Rcpp::Vector<13>; TIT = const int*; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:561:46:   required from ‘beachmat::lin_SparseArraySeed<V, TIT>::lin_SparseArraySeed(Rcpp::RObject) [with V = Rcpp::Vector<13>; TIT = const int*; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:36:39:   required from ‘std::unique_ptr<_Codecvt> beachmat::read_lin_sparse_block_raw(Rcpp::RObject) [with M = beachmat::lin_matrix; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:65:57:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:535:17: warning: comparison of integer expressions of different signedness: ‘const size_t’ {aka ‘const long unsigned int’} and ‘R_xlen_t’ {aka ‘long int’} [-Wsign-compare]
  535 |         if (nnz != x.size()) {
      |             ~~~~^~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:551:45: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  551 |                     if (lastR <= 0 || lastR > NR || lastC <= 0 || lastC > NC) {
      |                                       ~~~~~~^~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:551:73: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  551 |                     if (lastR <= 0 || lastR > NR || lastC <= 0 || lastC > NC) {
      |                                                                   ~~~~~~^~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:593:35: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  593 |                 for (int v = 0; v < nnz; ++v, ++rowIt, ++colIt, ++xIt) {
      |                                 ~~^~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::SparseArraySeed_reader<V, TIT>::SparseArraySeed_reader(Rcpp::RObject) [with V = Rcpp::Vector<14, Rcpp::PreserveStorage>; TIT = const double*; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:561:46:   required from ‘beachmat::lin_SparseArraySeed<V, TIT>::lin_SparseArraySeed(Rcpp::RObject) [with V = Rcpp::Vector<14, Rcpp::PreserveStorage>; TIT = const double*; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:38:39:   required from ‘std::unique_ptr<_Codecvt> beachmat::read_lin_sparse_block_raw(Rcpp::RObject) [with M = beachmat::lin_matrix; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:65:57:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:535:17: warning: comparison of integer expressions of different signedness: ‘const size_t’ {aka ‘const long unsigned int’} and ‘R_xlen_t’ {aka ‘long int’} [-Wsign-compare]
  535 |         if (nnz != x.size()) {
      |             ~~~~^~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:551:45: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  551 |                     if (lastR <= 0 || lastR > NR || lastC <= 0 || lastC > NC) {
      |                                       ~~~~~~^~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:551:73: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  551 |                     if (lastR <= 0 || lastR > NR || lastC <= 0 || lastC > NC) {
      |                                                                   ~~~~~~^~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:593:35: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  593 |                 for (int v = 0; v < nnz; ++v, ++rowIt, ++colIt, ++xIt) {
      |                                 ~~^~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::SparseArraySeed_reader<V, TIT>::SparseArraySeed_reader(Rcpp::RObject) [with V = Rcpp::Vector<10, Rcpp::PreserveStorage>; TIT = const int*; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:561:46:   required from ‘beachmat::lin_SparseArraySeed<V, TIT>::lin_SparseArraySeed(Rcpp::RObject) [with V = Rcpp::Vector<10, Rcpp::PreserveStorage>; TIT = const int*; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:40:39:   required from ‘std::unique_ptr<_Codecvt> beachmat::read_lin_sparse_block_raw(Rcpp::RObject) [with M = beachmat::lin_matrix; Rcpp::RObject = Rcpp::RObject_Impl<Rcpp::PreserveStorage>]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/read_lin_block.h:65:57:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:535:17: warning: comparison of integer expressions of different signedness: ‘const size_t’ {aka ‘const long unsigned int’} and ‘R_xlen_t’ {aka ‘long int’} [-Wsign-compare]
  535 |         if (nnz != x.size()) {
      |             ~~~~^~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:551:45: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  551 |                     if (lastR <= 0 || lastR > NR || lastC <= 0 || lastC > NC) {
      |                                       ~~~~~~^~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:551:73: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  551 |                     if (lastR <= 0 || lastR > NR || lastC <= 0 || lastC > NC) {
      |                                                                   ~~~~~~^~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:593:35: warning: comparison of integer expressions of different signedness: ‘int’ and ‘const size_t’ {aka ‘const long unsigned int’} [-Wsign-compare]
  593 |                 for (int v = 0; v < nnz; ++v, ++rowIt, ++colIt, ++xIt) {
      |                                 ~~^~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::sparse_index<OUT, I> beachmat::Csparse_core<TIT, I, P>::get_row(size_t, ALT, I*, size_t, size_t) [with OUT = const int*; ALT = int*; TIT = const double*; I = int; P = long unsigned int; size_t = long unsigned int]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:650:42:   required from ‘beachmat::sparse_index<OUT, int> beachmat::SparseArraySeed_reader<V, TIT>::get_row(size_t, ALT, int*, size_t, size_t) [with OUT = const int*; ALT = int*; V = Rcpp::Vector<14, Rcpp::PreserveStorage>; TIT = const double*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:596:51:   required from ‘beachmat::sparse_index<const int*, int> beachmat::lin_SparseArraySeed<V, TIT>::get_row(size_t, int*, int*, size_t, size_t) [with V = Rcpp::Vector<14, Rcpp::PreserveStorage>; TIT = const double*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:595:35:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:250:22: warning: comparison of integer expressions of different signedness: ‘const int’ and ‘const long unsigned int’ [-Wsign-compare]
  250 |             if (idex != *pIt && static_cast<size_t>(i[idex]) == r) {
      |                 ~~~~~^~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::sparse_index<OUT, I> beachmat::Csparse_core<TIT, I, P>::get_row(size_t, ALT, I*, size_t, size_t) [with OUT = const double*; ALT = double*; TIT = const double*; I = int; P = long unsigned int; size_t = long unsigned int]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:650:42:   required from ‘beachmat::sparse_index<OUT, int> beachmat::SparseArraySeed_reader<V, TIT>::get_row(size_t, ALT, int*, size_t, size_t) [with OUT = const double*; ALT = double*; V = Rcpp::Vector<14, Rcpp::PreserveStorage>; TIT = const double*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:602:54:   required from ‘beachmat::sparse_index<const double*, int> beachmat::lin_SparseArraySeed<V, TIT>::get_row(size_t, double*, int*, size_t, size_t) [with V = Rcpp::Vector<14, Rcpp::PreserveStorage>; TIT = const double*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:601:38:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:250:22: warning: comparison of integer expressions of different signedness: ‘const int’ and ‘const long unsigned int’ [-Wsign-compare]
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::sparse_index<OUT, I> beachmat::Csparse_core<TIT, I, P>::get_row(size_t, ALT, I*, size_t, size_t) [with OUT = const int*; ALT = int*; TIT = const int*; I = int; P = long unsigned int; size_t = long unsigned int]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:650:42:   required from ‘beachmat::sparse_index<OUT, int> beachmat::SparseArraySeed_reader<V, TIT>::get_row(size_t, ALT, int*, size_t, size_t) [with OUT = const int*; ALT = int*; V = Rcpp::Vector<10, Rcpp::PreserveStorage>; TIT = const int*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:596:51:   required from ‘beachmat::sparse_index<const int*, int> beachmat::lin_SparseArraySeed<V, TIT>::get_row(size_t, int*, int*, size_t, size_t) [with V = Rcpp::Vector<10, Rcpp::PreserveStorage>; TIT = const int*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:595:35:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:250:22: warning: comparison of integer expressions of different signedness: ‘const int’ and ‘const long unsigned int’ [-Wsign-compare]
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h: In instantiation of ‘beachmat::sparse_index<OUT, I> beachmat::Csparse_core<TIT, I, P>::get_row(size_t, ALT, I*, size_t, size_t) [with OUT = const double*; ALT = double*; TIT = const int*; I = int; P = long unsigned int; size_t = long unsigned int]’:
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:650:42:   required from ‘beachmat::sparse_index<OUT, int> beachmat::SparseArraySeed_reader<V, TIT>::get_row(size_t, ALT, int*, size_t, size_t) [with OUT = const double*; ALT = double*; V = Rcpp::Vector<10, Rcpp::PreserveStorage>; TIT = const int*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:602:54:   required from ‘beachmat::sparse_index<const double*, int> beachmat::lin_SparseArraySeed<V, TIT>::get_row(size_t, double*, int*, size_t, size_t) [with V = Rcpp::Vector<10, Rcpp::PreserveStorage>; TIT = const int*; size_t = long unsigned int]’
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/lin_matrix.h:601:38:   required from here
/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include/beachmat3/Csparse_reader.h:250:22: warning: comparison of integer expressions of different signedness: ‘const int’ and ‘const long unsigned int’ [-Wsign-compare]
g++ -std=gnu++11 -I"/home/biocbuild/bbs-3.17-bioc/R/include" -DNDEBUG  -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/Rcpp/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/beachmat/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/dqrng/include' -I'/home/biocbuild/bbs-3.17-bioc/R/site-library/scuttle/include' -I/usr/local/include    -fPIC  -g -O2  -Wall -c rand_custom.cpp -o rand_custom.o
In file included from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/mpl/aux_/na_assert.hpp:23,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/mpl/arg.hpp:25,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/mpl/placeholders.hpp:24,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/iterator/iterator_categories.hpp:16,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:10,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/concepts.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from rand_custom.cpp:1:
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/mpl/assert.hpp:194:21: warning: unnecessary parentheses in declaration of ‘assert_arg’ [-Wparentheses]
  194 | failed ************ (Pred::************
      |                     ^~~~~~~~~~~~~~~~~~~
  195 |       assert_arg( void (*)(Pred), typename assert_arg_pred<Pred>::type )
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  196 |     );
      |     ~                
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/mpl/assert.hpp:194:21: note: remove parentheses
  194 | failed ************ (Pred::************
      |                     ^~~~~~~~~~~~~~~~~~~
      |                     -
  195 |       assert_arg( void (*)(Pred), typename assert_arg_pred<Pred>::type )
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  196 |     );
      |     ~                
      |     -
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/mpl/assert.hpp:199:21: warning: unnecessary parentheses in declaration of ‘assert_not_arg’ [-Wparentheses]
  199 | failed ************ (boost::mpl::not_<Pred>::************
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  200 |       assert_not_arg( void (*)(Pred), typename assert_arg_pred_not<Pred>::type )
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  201 |     );
      |     ~                
/home/biocbuild/bbs-3.17-bioc/R/site-library/BH/include/boost/mpl/assert.hpp:199:21: note: remove parentheses
  199 | failed ************ (boost::mpl::not_<Pred>::************
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                     -
  200 |       assert_not_arg( void (*)(Pred), typename assert_arg_pred_not<Pred>::type )
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  201 |     );
      |     ~                
      |     -
g++ -std=gnu++11 -shared -L/home/biocbuild/bbs-3.17-bioc/R/lib -L/usr/local/lib -o scran.so RcppExports.o choose_effect_size.o combine_rho.o compute_blocked_stats.o compute_residual_stats.o compute_rho_null.o cyclone_scores.o overlap_exprs.o rand_custom.o -llapack -L/home/biocbuild/bbs-3.17-bioc/R/lib -lRblas -lgfortran -lm -L/home/biocbuild/bbs-3.17-bioc/R/lib -lR
installing to /home/biocbuild/bbs-3.17-bioc/R/site-library/00LOCK-scran/00new/scran/libs
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* DONE (scran)
