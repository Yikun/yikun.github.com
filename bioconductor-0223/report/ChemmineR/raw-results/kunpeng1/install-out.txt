##############################################################################
##############################################################################
###
### Running command:
###
###   /home/biocbuild/bbs-3.17-bioc/R/bin/R CMD INSTALL ChemmineR
###
##############################################################################
##############################################################################


* installing to library ‘/home/biocbuild/bbs-3.17-bioc/R/library’
* installing *source* package ‘ChemmineR’ ...
** using staged installation
** libs
using C++ compiler: ‘g++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0’
g++ -std=gnu++14  -I"/home/biocbuild/bbs-3.17-bioc/R/include" -DNDEBUG  -I'/home/biocbuild/bbs-3.17-bioc/R/library/Rcpp/include' -I'/home/biocbuild/bbs-3.17-bioc/R/library/BH/include' -I/usr/local/include   -DNO_MAIN -DNO_DEBUG -fPIC  -g -O2  -Wall  -c DisjointSets.cpp -o DisjointSets.o
g++ -std=gnu++14  -I"/home/biocbuild/bbs-3.17-bioc/R/include" -DNDEBUG  -I'/home/biocbuild/bbs-3.17-bioc/R/library/Rcpp/include' -I'/home/biocbuild/bbs-3.17-bioc/R/library/BH/include' -I/usr/local/include   -DNO_MAIN -DNO_DEBUG -fPIC  -g -O2  -Wall  -c cluster.cc -o cluster.o
cluster.cc: In function ‘int nbr_intersect(std::vector<int>&, std::vector<int>&)’:
cluster.cc:118:18: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<int>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  118 |         while (i < nbrs1.size() and j < nbrs2.size()) {
      |                ~~^~~~~~~~~~~~~~
cluster.cc:118:39: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<int>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  118 |         while (i < nbrs1.size() and j < nbrs2.size()) {
      |                                     ~~^~~~~~~~~~~~~~
cluster.cc: In function ‘int contains(int, std::vector<int>&)’:
cluster.cc:131:24: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<int>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  131 |         for(int i=0; i < list.size(); i++)
      |                      ~~^~~~~~~~~~~~~
cluster.cc: In function ‘DisjointSets cluster(int, int, int, int)’:
cluster.cc:267:35: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<int>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  267 |                 for (int j = 0; j < nbr_list[i].size(); j ++) {
      |                                 ~~^~~~~~~~~~~~~~~~~~~~
cluster.cc: In function ‘void loadNNMatrix(int, int, int, SEXP)’:
cluster.cc:284:28: warning: comparison of integer expressions of different signedness: ‘unsigned int’ and ‘int’ [-Wsign-compare]
  284 |         for(unsigned i=0; i<N; i++) //rows
      |                           ~^~
cluster.cc:298:32: warning: comparison of integer expressions of different signedness: ‘std::vector<int>::size_type’ {aka ‘long unsigned int’} and ‘int’ [-Wsign-compare]
  298 |                 if(nbrs.size() < minNbrs) // will end up a singleton
      |                    ~~~~~~~~~~~~^~~~~~~~~
cluster.cc: In function ‘void loadNNList(int, int, SEXP)’:
cluster.cc:314:28: warning: comparison of integer expressions of different signedness: ‘unsigned int’ and ‘int’ [-Wsign-compare]
  314 |         for(unsigned i=0; i<N; i++) //rows
      |                           ~^~
cluster.cc:332:32: warning: comparison of integer expressions of different signedness: ‘std::vector<int>::size_type’ {aka ‘long unsigned int’} and ‘int’ [-Wsign-compare]
  332 |                 if(nbrs.size() < minNbrs) // will end up a singleton
      |                    ~~~~~~~~~~~~^~~~~~~~~
cluster.cc: In function ‘SEXPREC* jarvis_patrick(SEXP, SEXP, SEXP, SEXP, SEXP)’:
cluster.cc:390:28: warning: comparison of integer expressions of different signedness: ‘unsigned int’ and ‘int’ [-Wsign-compare]
  390 |         for(unsigned i=0; i<N; i++){
      |                           ~^~
cluster.cc: At global scope:
cluster.cc:49:13: warning: ‘void prepare_neighbors(const char*, int, int)’ defined but not used [-Wunused-function]
   49 | void static prepare_neighbors(const char* nbr_file, int skip, int p)
      |             ^~~~~~~~~~~~~~~~~
g++ -std=gnu++14  -I"/home/biocbuild/bbs-3.17-bioc/R/include" -DNDEBUG  -I'/home/biocbuild/bbs-3.17-bioc/R/library/Rcpp/include' -I'/home/biocbuild/bbs-3.17-bioc/R/library/BH/include' -I/usr/local/include   -DNO_MAIN -DNO_DEBUG -fPIC  -g -O2  -Wall  -c cstrsplit.cc -o cstrsplit.o
In file included from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/mpl/aux_/na_assert.hpp:23,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/mpl/arg.hpp:25,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/mpl/placeholders.hpp:24,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/iterator/iterator_categories.hpp:16,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/iterator/iterator_facade.hpp:13,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range_core.hpp:27,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string.hpp:19,
                 from cstrsplit.cc:7:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/mpl/assert.hpp:194:21: warning: unnecessary parentheses in declaration of ‘assert_arg’ [-Wparentheses]
  194 | failed ************ (Pred::************
      |                     ^~~~~~~~~~~~~~~~~~~
  195 |       assert_arg( void (*)(Pred), typename assert_arg_pred<Pred>::type )
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  196 |     );
      |     ~                
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/mpl/assert.hpp:194:21: note: remove parentheses
  194 | failed ************ (Pred::************
      |                     ^~~~~~~~~~~~~~~~~~~
      |                     -
  195 |       assert_arg( void (*)(Pred), typename assert_arg_pred<Pred>::type )
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  196 |     );
      |     ~                
      |     -
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/mpl/assert.hpp:199:21: warning: unnecessary parentheses in declaration of ‘assert_not_arg’ [-Wparentheses]
  199 | failed ************ (boost::mpl::not_<Pred>::************
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  200 |       assert_not_arg( void (*)(Pred), typename assert_arg_pred_not<Pred>::type )
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  201 |     );
      |     ~                
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/mpl/assert.hpp:199:21: note: remove parentheses
  199 | failed ************ (boost::mpl::not_<Pred>::************
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                     -
  200 |       assert_not_arg( void (*)(Pred), typename assert_arg_pred_not<Pred>::type )
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  201 |     );
      |     ~                
      |     -
In file included from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/bind/mem_fn.hpp:25,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/mem_fn.hpp:22,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/function/detail/prologue.hpp:18,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/function.hpp:30,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/detail/find_iterator.hpp:18,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/find_iterator.hpp:24,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/iter_find.hpp:27,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string.hpp:23,
                 from cstrsplit.cc:7:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/get_pointer.hpp:48:40: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
   48 | template<class T> T * get_pointer(std::auto_ptr<T> const& p)
      |                                        ^~~~~~~~
In file included from /usr/include/c++/11/bits/locale_conv.h:41,
                 from /usr/include/c++/11/locale:43,
                 from /usr/include/c++/11/iomanip:43,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/Rcpp/include/RcppCommon.h:53,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/Rcpp/include/Rcpp.h:27,
                 from cstrsplit.cc:2:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string.hpp:19,
                 from cstrsplit.cc:7:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >, const char*>]’:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/iter_find.hpp:81:13:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
cstrsplit.cc:14:15:   required from here
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string.hpp:23,
                 from cstrsplit.cc:7:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >; IteratorT = const char*]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string.hpp:19,
                 from cstrsplit.cc:7:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<const char*> >]’:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<const char*>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<const char*>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<const char*>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<const char*>]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const char*> >::value’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
cstrsplit.cc:14:15:   required from here
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string.hpp:19,
                 from cstrsplit.cc:7:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<const char*>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string.hpp:19,
                 from cstrsplit.cc:7:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>)>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
cstrsplit.cc:14:15:   required from here
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string.hpp:19,
                 from cstrsplit.cc:7:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string.hpp:19,
                 from cstrsplit.cc:7:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<const char*>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<const char*>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<const char*>]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const char*> >::value’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const char*> >’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
cstrsplit.cc:14:15:   required from here
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string.hpp:19,
                 from cstrsplit.cc:7:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string.hpp:19,
                 from cstrsplit.cc:7:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<const char*> >]’:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<const char*>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<const char*>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<const char*>]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const char*> >::value’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const char*> >’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
cstrsplit.cc:14:15:   required from here
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string.hpp:19,
                 from cstrsplit.cc:7:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<const char*>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string.hpp:19,
                 from cstrsplit.cc:7:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<const char*> >]’:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<const char*>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<const char*>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<const char*>]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const char*> >::value’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const char*> >’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
cstrsplit.cc:14:15:   required from here
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string.hpp:19,
                 from cstrsplit.cc:7:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<const char*>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string.hpp:19,
                 from cstrsplit.cc:7:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>)>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:152:13:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
cstrsplit.cc:14:15:   required from here
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string.hpp:19,
                 from cstrsplit.cc:7:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string.hpp:19,
                 from cstrsplit.cc:7:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:152:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<const char*>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<const char*>]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const char*> >::value’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const char*> >’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<const char*>)>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
cstrsplit.cc:14:15:   required from here
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string.hpp:19,
                 from cstrsplit.cc:7:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string.hpp:19,
                 from cstrsplit.cc:7:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<const char*> >]’:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<const char*>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<const char*>]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const char*> >::value’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const char*> >’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<const char*>)>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
cstrsplit.cc:14:15:   required from here
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string.hpp:19,
                 from cstrsplit.cc:7:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<const char*>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string.hpp:19,
                 from cstrsplit.cc:7:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<const char*>]’:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:278:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<const char*> >’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<const char*> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<const char*> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<const char*> > >’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<const char*> >)>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
cstrsplit.cc:14:15:   required from here
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string.hpp:19,
                 from cstrsplit.cc:7:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = const char*]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string.hpp:19,
                 from cstrsplit.cc:7:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<const char*> > >]’:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<const char*> >’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<const char*> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<const char*> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<const char*> > >’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<const char*> >)>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
cstrsplit.cc:14:15:   required from here
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string.hpp:19,
                 from cstrsplit.cc:7:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<const char*> >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string.hpp:19,
                 from cstrsplit.cc:7:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<const char*> >]’:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/algorithm/equal.hpp:174:13:   required from ‘bool boost::range::equal(const SinglePassRange1&, const SinglePassRange2&) [with SinglePassRange1 = boost::iterator_range<const char*>; SinglePassRange2 = boost::iterator_range<const char*>]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range_core.hpp:644:32:   required from ‘bool boost::operator==(const boost::iterator_range<IteratorT>&, const boost::iterator_range<Iterator2T>&) [with Iterator1T = const char*; Iterator2T = const char*]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/find_iterator.hpp:359:32:   required from ‘bool boost::algorithm::split_iterator<IteratorT>::equal(const boost::algorithm::split_iterator<IteratorT>&) const [with IteratorT = const char*]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/iterator/iterator_facade.hpp:649:26:   required from ‘static bool boost::iterators::iterator_core_access::equal(const Facade1&, const Facade2&, mpl_::true_) [with Facade1 = boost::algorithm::split_iterator<const char*>; Facade2 = boost::algorithm::split_iterator<const char*>; mpl_::true_ = mpl_::bool_<true>]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/iterator/iterator_facade.hpp:981:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator==(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::algorithm::split_iterator<const char*>; V1 = const boost::iterator_range<const char*>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = const boost::iterator_range<const char*>&; Difference1 = long int; Derived2 = boost::algorithm::split_iterator<const char*>; V2 = const boost::iterator_range<const char*>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = const boost::iterator_range<const char*>&; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/iterator/iterator_adaptor.hpp:305:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
cstrsplit.cc:14:15:   required from here
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string.hpp:19,
                 from cstrsplit.cc:7:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<const char*>]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<const char*>]’:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<const char*> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<const char*>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<const char*>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<const char*>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<const char*>]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
cstrsplit.cc:14:15:   required from here
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = const char*]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
cstrsplit.cc:14:15:   required from here
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<const char*>]’:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<const char*> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<const char*>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<const char*>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<const char*>]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const char*> >::value’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
cstrsplit.cc:14:15:   required from here
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = const char*]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:136:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<const char*>]’:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<const char*> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<const char*>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<const char*>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<const char*>]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const char*> >::value’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
cstrsplit.cc:14:15:   required from here
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = const char*]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
cstrsplit.cc:14:15:   required from here
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<const char*>]’:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<const char*> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<const char*>’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<const char*>]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const char*> >::value’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const char*> >’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
cstrsplit.cc:14:15:   required from here
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = const char*]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<const char*> >]’:
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<const char*> > >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<const char*> >’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<const char*> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<const char*> > >::value’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<const char*> > >’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, const char*>, boost::algorithm::split_iterator<const char*>, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = const char*&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
cstrsplit.cc:14:15:   required from here
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<const char*>]’
   37 |       ~model()
      |       ^
/home/biocbuild/bbs-3.17-bioc/R/library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
g++ -std=gnu++14  -I"/home/biocbuild/bbs-3.17-bioc/R/include" -DNDEBUG  -I'/home/biocbuild/bbs-3.17-bioc/R/library/Rcpp/include' -I'/home/biocbuild/bbs-3.17-bioc/R/library/BH/include' -I/usr/local/include   -DNO_MAIN -DNO_DEBUG -fPIC  -g -O2  -Wall  -c desc.cc -o desc.o
desc.cc: In function ‘SEXPREC* genAPDescriptor(SEXP)’:
desc.cc:249:24: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<unsigned int>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  249 |         for(int i=0; i < descs.size(); i++)
      |                      ~~^~~~~~~~~~~~~~
g++ -std=gnu++14  -I"/home/biocbuild/bbs-3.17-bioc/R/include" -DNDEBUG  -I'/home/biocbuild/bbs-3.17-bioc/R/library/Rcpp/include' -I'/home/biocbuild/bbs-3.17-bioc/R/library/BH/include' -I/usr/local/include   -DNO_MAIN -DNO_DEBUG -fPIC  -g -O2  -Wall  -c fingerprints.cc -o fingerprints.o
fingerprints.cc: In function ‘SEXPREC* uniquifyAtomPairs(SEXP)’:
fingerprints.cc:138:24: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<IndexedValue*>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  138 |         for(int i=0; i < aps.size(); i++)
      |                      ~~^~~~~~~~~~~~
fingerprints.cc:145:24: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<IndexedValue*>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  145 |         for(int i=0; i < aps.size(); i++){
      |                      ~~^~~~~~~~~~~~
fingerprints.cc:158:24: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<IndexedValue*>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  158 |         for(int i=0; i < aps.size(); i++){
      |                      ~~^~~~~~~~~~~~
g++ -std=gnu++14  -I"/home/biocbuild/bbs-3.17-bioc/R/include" -DNDEBUG  -I'/home/biocbuild/bbs-3.17-bioc/R/library/Rcpp/include' -I'/home/biocbuild/bbs-3.17-bioc/R/library/BH/include' -I/usr/local/include   -DNO_MAIN -DNO_DEBUG -fPIC  -g -O2  -Wall  -c formats.cc -o formats.o
In file included from /usr/include/string.h:535,
                 from formats.cc:4:
In function ‘char* strncpy(char*, const char*, size_t)’,
    inlined from ‘int sdf_iter(std::fstream&, std::string&, int&)’ at formats.cc:237:10:
/usr/include/aarch64-linux-gnu/bits/string_fortified.h:95:34: warning: ‘char* __builtin_strncpy(char*, const char*, long unsigned int)’ output may be truncated copying 4 bytes from a string of length 100001 [-Wstringop-truncation]
   95 |   return __builtin___strncpy_chk (__dest, __src, __len,
      |          ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
   96 |                                   __glibc_objsize (__dest));
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~
g++ -std=gnu++14  -I"/home/biocbuild/bbs-3.17-bioc/R/include" -DNDEBUG  -I'/home/biocbuild/bbs-3.17-bioc/R/library/Rcpp/include' -I'/home/biocbuild/bbs-3.17-bioc/R/library/BH/include' -I/usr/local/include   -DNO_MAIN -DNO_DEBUG -fPIC  -g -O2  -Wall  -c molecule.cc -o molecule.o
g++ -std=gnu++14  -I"/home/biocbuild/bbs-3.17-bioc/R/include" -DNDEBUG  -I'/home/biocbuild/bbs-3.17-bioc/R/library/Rcpp/include' -I'/home/biocbuild/bbs-3.17-bioc/R/library/BH/include' -I/usr/local/include   -DNO_MAIN -DNO_DEBUG -fPIC  -g -O2  -Wall  -c r_wrap.cc -o r_wrap.o
g++ -std=gnu++14  -I"/home/biocbuild/bbs-3.17-bioc/R/include" -DNDEBUG  -I'/home/biocbuild/bbs-3.17-bioc/R/library/Rcpp/include' -I'/home/biocbuild/bbs-3.17-bioc/R/library/BH/include' -I/usr/local/include   -DNO_MAIN -DNO_DEBUG -fPIC  -g -O2  -Wall  -c script.cc -o script.o
In file included from script.cc:2:
desc.h:39:13: warning: ‘elements’ defined but not used [-Wunused-variable]
   39 | static char elements[112][3] = {
      |             ^~~~~~~~
g++ -std=gnu++14  -I"/home/biocbuild/bbs-3.17-bioc/R/include" -DNDEBUG  -I'/home/biocbuild/bbs-3.17-bioc/R/library/Rcpp/include' -I'/home/biocbuild/bbs-3.17-bioc/R/library/BH/include' -I/usr/local/include   -DNO_MAIN -DNO_DEBUG -fPIC  -g -O2  -Wall  -c similarity.cc -o similarity.o
In file included from similarity.cc:1:
desc.h:39:13: warning: ‘elements’ defined but not used [-Wunused-variable]
   39 | static char elements[112][3] = {
      |             ^~~~~~~~
g++ -std=gnu++14 -shared -L/home/biocbuild/bbs-3.17-bioc/R/lib -L/usr/local/lib -o ChemmineR.so DisjointSets.o cluster.o cstrsplit.o desc.o fingerprints.o formats.o molecule.o r_wrap.o script.o similarity.o -L/home/biocbuild/bbs-3.17-bioc/R/lib -lR
installing to /home/biocbuild/bbs-3.17-bioc/R/library/00LOCK-ChemmineR/00new/ChemmineR/libs
** R
** data
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* DONE (ChemmineR)
