##############################################################################
##############################################################################
###
### Running command:
###
###   /home/biocbuild/R/R-4.3.0/bin/R CMD check --install=check:DECIPHER.install-out.txt --library=/home/biocbuild/R/R-4.3.0/site-library --timings DECIPHER_2.29.0.tar.gz
###
##############################################################################
##############################################################################


* using log directory ‘/home/biocbuild/bbs-3.18-bioc/meat/DECIPHER.Rcheck’
* using R version 4.3.0 (2023-04-21)
* using platform: aarch64-unknown-linux-gnu (64-bit)
* R was compiled by
    gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
    GNU Fortran (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
* running under: Ubuntu 22.04.2 LTS
* using session charset: UTF-8
* checking for file ‘DECIPHER/DESCRIPTION’ ... OK
* checking extension type ... Package
* this is package ‘DECIPHER’ version ‘2.29.0’
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ‘DECIPHER’ can be installed ... OK
* used C compiler: ‘gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0’
* checking installed package size ... NOTE
  installed size is 12.9Mb
  sub-directories of 1Mb or more:
    R         1.4Mb
    data      7.5Mb
    extdata   2.3Mb
    libs      1.3Mb
* checking package directory ... OK
* checking ‘build’ directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
DesignSignatures: no visible binding for global variable ‘deltaHrules’
FindGenes: no visible binding for global variable ‘deltaHrulesRNA’
FindNonCoding: no visible binding for global variable ‘deltaHrulesRNA’
LearnNonCoding: no visible binding for global variable ‘deltaHrulesRNA’
PredictDBN: no visible binding for global variable ‘deltaGrulesRNA’
TreeLine: multiple local function definitions for ‘.minimize’ with
  different formal arguments
Undefined global functions or variables:
  deltaGrulesRNA deltaHrules deltaHrulesRNA
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking contents of ‘data’ directory ... OK
* checking data for non-ASCII characters ... OK
* checking data for ASCII and uncompressed saves ... OK
* checking line endings in C/C++/Fortran sources/headers ... OK
* checking line endings in Makefiles ... OK
* checking compilation flags in Makevars ... OK
* checking for GNU extensions in Makefiles ... OK
* checking for portable use of $(BLAS_LIBS) and $(LAPACK_LIBS) ... OK
* checking use of PKG_*FLAGS in Makefiles ... OK
* checking compiled code ... NOTE
Note: information on .o files is not available
* checking files in ‘vignettes’ ... OK
* checking examples ... OK
Examples with CPU (user + system) or elapsed time > 5s
                      user system elapsed
MapCharacters      106.211  0.404 106.613
FindNonCoding       99.879  0.632 100.508
LearnNonCoding      74.318  3.496  77.814
WriteGenes          50.294  0.184  50.478
ExtractGenes        49.294  0.396  49.689
Genes-class         47.617  0.172  47.787
FindGenes           46.532  0.140  46.670
BrowseSeqs          28.878  0.264  29.169
AlignSeqs           26.945  0.604  27.550
DetectRepeats       22.634  0.136  22.770
CorrectFrameshifts  18.912  0.124  19.035
StaggerAlignment    17.533  0.200  17.734
LearnTaxa           15.645  0.528  16.172
AlignTranslation    14.399  0.132  14.537
Taxa-class          13.221  0.052  13.274
IdTaxa              11.907  0.052  11.959
TreeLine            11.126  0.076  11.202
Clusterize           8.945  0.108   9.053
ScoreAlignment       6.804  0.036   6.840
TileSeqs             5.757  0.012   5.768
Array2Matrix         5.493  0.068   5.560
DesignArray          5.411  0.044   5.455
* checking for unstated dependencies in vignettes ... OK
* checking package vignettes in ‘inst/doc’ ... OK
* checking running R code from vignettes ...
  ‘ArtOfAlignmentInR.Rnw’... OK
  ‘ClassifySequences.Rnw’... OK
  ‘ClusteringSequences.Rnw’... OK
  ‘DECIPHERing.Rnw’... OK
  ‘DesignMicroarray.Rnw’... OK
  ‘DesignPrimers.Rnw’... OK
  ‘DesignProbes.Rnw’... OK
  ‘DesignSignatures.Rnw’... OK
  ‘FindChimeras.Rnw’... OK
  ‘FindingGenes.Rnw’... OK
  ‘FindingNonCodingRNAs.Rnw’... OK
  ‘GrowingTrees.Rnw’... OK
  ‘RepeatRepeat.Rnw’... OK
 OK
* checking re-building of vignette outputs ...