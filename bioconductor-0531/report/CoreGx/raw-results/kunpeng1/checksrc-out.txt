##############################################################################
##############################################################################
###
### Running command:
###
###   /home/biocbuild/R/R-4.3.0/bin/R CMD check --install=check:CoreGx.install-out.txt --library=/home/biocbuild/R/R-4.3.0/site-library --timings CoreGx_2.5.0.tar.gz
###
##############################################################################
##############################################################################


* using log directory ‘/home/biocbuild/bbs-3.18-bioc/meat/CoreGx.Rcheck’
* using R version 4.3.0 (2023-04-21)
* using platform: aarch64-unknown-linux-gnu (64-bit)
* R was compiled by
    gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
    GNU Fortran (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
* running under: Ubuntu 22.04.2 LTS
* using session charset: UTF-8
* checking for file ‘CoreGx/DESCRIPTION’ ... OK
* checking extension type ... Package
* this is package ‘CoreGx’ version ‘2.5.0’
* package encoding: UTF-8
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ‘CoreGx’ can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking ‘build’ directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking dependencies in R code ... NOTE
There are ::: calls to the package's namespace in its code. A package
  almost never needs to use ::: for its own objects:
  ‘.LongTable’ ‘.parseToRoxygen’ ‘.sensitivityToTRE’
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
.meshEval2: no visible binding for global variable ‘n’
.meshEval2: no visible binding for global variable ‘family’
.rebuildInfo: no visible global function definition for ‘patterns’
.rebuildInfo: no visible binding for global variable ‘..keepCols’
.rebuildInfo: no visible binding for global variable ‘replicate_id’
.rebuildInfo: no visible binding for global variable ‘treatment1id’
.rebuildInfo: no visible binding for global variable ‘sampleid’
.rebuildInfo: no visible binding for global variable ‘treatmentid’
.rebuildInfo: no visible binding for global variable ‘treatment_uid’
.rebuildInfo: no visible binding for global variable ‘..rowIDcols’
.rebuildInfo: no visible binding for global variable ‘sample_uid’
.rebuildInfo: no visible binding for global variable ‘..colIDcols’
.rebuildInfo: no visible binding for global variable ‘exp_id’
.rebuildProfiles: no visible binding for global variable
  ‘treatment_uid’
.rebuildProfiles: no visible binding for global variable ‘sample_uid’
.rebuildProfiles: no visible binding for global variable ‘exp_id’
.rebuildProfiles: no visible binding for global variable ‘N’
.rebuildRaw: no visible binding for global variable ‘.NATURAL’
.rebuildRaw: no visible binding for global variable ‘sampleid’
.rebuildRaw: no visible binding for global variable ‘exp_id’
.rebuildRaw: no visible binding for global variable ‘treatment1id’
.rebuildRaw: no visible binding for global variable ‘row_ids’
.rebuildRaw: no visible binding for global variable ‘col_ids’
.rebuildRaw: no visible binding for global variable ‘dose’
.rebuildRaw: no visible global function definition for ‘patterns’
.rebuildSensNumber: no visible global function definition for
  ‘patterns’
.rebuildSensNumber: no visible binding for global variable
  ‘.treatmentCombo’
.rebuildSensNumber: no visible binding for global variable
  ‘.sampleCombo’
.sensitivityToTRE: no visible binding for global variable ‘dose’
.sensitivityToTRE: no visible binding for global variable ‘viability’
.sensitivityToTRE: no visible binding for global variable
  ‘replicate_id’
.sensitivityToTRE: no visible binding for global variable ‘rn’
.sensitivityToTRE: no visible binding for global variable ‘treatmentid’
.sensitivityToTRE: no visible binding for global variable ‘sampleid’
.update_dimData: no visible binding for global variable ‘N’
.update_dimData: no visible binding for global variable ‘.NATURAL’
.update_dimData: no visible binding for global variable ‘.rownames’
CoreSet: no visible binding for global variable ‘cell’
CoreSet: no visible binding for global variable ‘drug’
aggregate2: no visible binding for global variable ‘group_id’
aggregate2: no visible binding for global variable ‘split_id’
cardinality: no visible binding for global variable ‘N’
checkColumnCardinality: no visible binding for global variable ‘N’
optimizeCoreGx: no visible binding for global variable ‘nthread’
optimizeCoreGx: no visible binding for global variable ‘total_time’
optimizeCoreGx: no visible binding for global variable ‘mem_alloc’
optimizeCoreGx: no visible binding for global variable ‘itr/sec’
optimizeCoreGx: no visible binding for global variable ‘gc/sec’
optimizeCoreGx: no visible binding for global variable ‘median_sec’
optimizeCoreGx: no visible binding for global variable ‘N’
buildComboProfiles,LongTable: no visible binding for global variable
  ‘treatment2dose’
buildComboProfiles,LongTable: no visible binding for global variable
  ‘treatment1dose’
coerce,SummarizedExperiment-data.table: no visible binding for global
  variable ‘.sample’
coerce,SummarizedExperiment-data.table: no visible binding for global
  variable ‘.feature’
reindex,LongTable: no visible binding for global variable ‘.rowKey’
reindex,LongTable: no visible binding for global variable ‘.colKey’
sensitivityRaw<-,CoreSet-array: no visible binding for global variable
  ‘V2’
sensitivityRaw<-,CoreSet-array: no visible binding for global variable
  ‘V1’
sensitivityRaw<-,CoreSet-array: no visible binding for global variable
  ‘rn’
treatmentResponse<-,CoreSet-list_OR_LongTable: no visible binding for
  global variable ‘funContext’
updateObject,CoreSet: no visible global function definition for
  ‘isValid’
updateObject,LongTable: no visible global function definition for
  ‘isValid’
Undefined global functions or variables:
  ..colIDcols ..keepCols ..rowIDcols .NATURAL .colKey .feature .rowKey
  .rownames .sample .sampleCombo .treatmentCombo N V1 V2 cell col_ids
  dose drug exp_id family funContext gc/sec group_id isValid itr/sec
  median_sec mem_alloc n nthread patterns replicate_id rn row_ids
  sample_uid sampleid split_id total_time treatment1dose treatment1id
  treatment2dose treatment_uid treatmentid viability
Consider adding
  importFrom("stats", "family")
to your NAMESPACE file.
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... NOTE
S3 methods shown with full name in documentation object 'setOps-immutable':
  ‘subset.immutable’

The \usage entries for S3 methods should use the \method markup and not
their full name.
See chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking contents of ‘data’ directory ... OK
* checking data for non-ASCII characters ... NOTE
  Note: found 99 marked UTF-8 strings
* checking LazyData ... OK
* checking data for ASCII and uncompressed saves ... OK
* checking files in ‘vignettes’ ... OK
* checking examples ... OK
* checking for unstated dependencies in ‘tests’ ... OK
* checking tests ...
  Running ‘testthat.R’
 OK
* checking for unstated dependencies in vignettes ... OK
* checking package vignettes in ‘inst/doc’ ... OK
* checking running R code from vignettes ...
  ‘TreatmentResponseExperiment.Rmd’ using ‘UTF-8’... OK
  ‘coreGx.Rmd’ using ‘UTF-8’... OK
 NONE
* checking re-building of vignette outputs ... OK
* checking PDF version of manual ... OK
* DONE

Status: 4 NOTEs
See
  ‘/home/biocbuild/bbs-3.18-bioc/meat/CoreGx.Rcheck/00check.log’
for details.


