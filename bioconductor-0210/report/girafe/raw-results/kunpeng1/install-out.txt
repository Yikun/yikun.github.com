##############################################################################
##############################################################################
###
### Running command:
###
###   /home/biocbuild/bbs-3.17-bioc/R/bin/R CMD INSTALL girafe
###
##############################################################################
##############################################################################


* installing to library ‘/home/biocbuild/bbs-3.17-bioc/R/library’
* installing *source* package ‘girafe’ ...
** using staged installation
** libs
using C compiler: ‘gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0’
using C++ compiler: ‘g++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0’
g++ -std=gnu++14  -I"/home/biocbuild/bbs-3.17-bioc/R/include" -DNDEBUG   -I/usr/local/include    -fPIC  -g -O2  -Wall  -c coverage.cpp -o coverage.o
gcc -I"/home/biocbuild/bbs-3.17-bioc/R/include" -DNDEBUG   -I/usr/local/include    -fPIC  -g -O2  -Wall -c girafe_init.c -o girafe_init.o
g++ -std=gnu++14 -shared -L/home/biocbuild/bbs-3.17-bioc/R/lib -L/usr/local/lib -o girafe.so coverage.o girafe_init.o -L/home/biocbuild/bbs-3.17-bioc/R/lib -lR
installing to /home/biocbuild/bbs-3.17-bioc/R/library/00LOCK-girafe/00new/girafe/libs
** R
** inst
** byte-compile and prepare package for lazy loading
No methods found in package ‘IRanges’ for requests: ‘score’, ‘score<-’, ‘sort’ when loading ‘girafe’
Creating a generic function for ‘sample’ from package ‘base’ in package ‘girafe’
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
No methods found in package ‘IRanges’ for requests: ‘score’, ‘score<-’, ‘sort’ when loading ‘girafe’
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
No methods found in package ‘IRanges’ for requests: ‘score’, ‘score<-’, ‘sort’ when loading ‘girafe’
** testing if installed package keeps a record of temporary installation path
* DONE (girafe)
