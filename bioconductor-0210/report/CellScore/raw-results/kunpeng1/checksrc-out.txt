##############################################################################
##############################################################################
###
### Running command:
###
###   /home/biocbuild/bbs-3.17-bioc/R/bin/R CMD check --install=check:CellScore.install-out.txt --library=/home/biocbuild/bbs-3.17-bioc/R/library --timings CellScore_1.19.0.tar.gz
###
##############################################################################
##############################################################################


* using log directory ‘/home/biocbuild/bbs-3.17-bioc/meat/CellScore.Rcheck’
* using R Under development (unstable) (2023-01-14 r83615)
* using platform: aarch64-unknown-linux-gnu (64-bit)
* R was compiled by
    gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
    GNU Fortran (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
* running under: Ubuntu 22.04.1 LTS
* using session charset: UTF-8
* checking for file ‘CellScore/DESCRIPTION’ ... OK
* this is package ‘CellScore’ version ‘1.19.0’
* package encoding: UTF-8
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ‘CellScore’ can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking ‘build’ directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... OK
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking installed files from ‘inst/doc’ ... OK
* checking files in ‘vignettes’ ... OK
* checking examples ... ERROR
Running examples in ‘CellScore-Ex.R’ failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: heatmapOnOffMarkers
> ### Title: heatmapOnOffMarkers
> ### Aliases: heatmapOnOffMarkers
> ### Keywords: donor heatmap markers on/off standards target
> 
> ### ** Examples
> 
> ## Load the expression set for the standard cell types
> library(Biobase)
Loading required package: BiocGenerics

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    Filter, Find, Map, Position, Reduce, anyDuplicated, aperm, append,
    as.data.frame, basename, cbind, colnames, dirname, do.call,
    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,
    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,
    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,
    tapply, union, unique, unsplit, which.max, which.min

Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

> library(hgu133plus2CellScore) # eset.std
> 
> ## Locate the external data files in the CellScore package
> rdata.path <- system.file("extdata", "eset48.RData", package = "CellScore")
> tsvdata.path <- system.file("extdata", "cell_change_test.tsv",
+                              package = "CellScore")
> 
> if (file.exists(rdata.path) && file.exists(tsvdata.path)) {
+ 
+    ## Load the expression set with normalized expressions of 48 test samples
+    load(rdata.path)
+ 
+    ## Import the cell change info for the loaded test samples
+    cell.change <- read.delim(file= tsvdata.path, sep="\t",
+                              header=TRUE, stringsAsFactors=FALSE)
+ 
+    ## Combine the standards and the test data
+    eset <- combine(eset.std, eset48)
+ 
+    ## Generate cosine similarity for the combined data
+    ## NOTE: May take 1-2 minutes on the full eset object
+    ## so we subset it for 4 cell types
+    pdata <- pData(eset)
+    sel.samples <- pdata$general_cell_type %in% c("ESC", "EC", "FIB", "KER", 
+                  "ASC", "NPC", "MSC", "iPS", "piPS")
+    eset.sub <- eset[, sel.samples]
+    cs <- CosineSimScore(eset.sub, cell.change, iqr.cutoff=0.1)
+ 
+    ## Generate the on/off scores for the combined data
+    individ.OnOff <- OnOff(eset.sub, cell.change, out.put="individual")
+ 
+    ## Generate the CellScore values for all samples
+    cellscore <- CellScore(eset.sub, cell.change, individ.OnOff$scores,
+                           cs$cosine.samples)
+    ## Get the CellScore fvalues rom valid transitions defined by cell.change
+    ## table
+    plot.data <- extractTransitions(cellscore, cell.change)
+ 
+    ## Define a plot group variable
+    plot.data$plot_group <- paste(plot.data$experiment_id,
+                                 plot.data$cxkey.subcelltype, sep="_")
+    ## Sort the scores 1) by target 2) by donor 3) by study
+    plot.data.ordered <- plot.data[order(plot.data$target,
+                                         plot.data$donor_tissue,
+                                         plot.data$experiment_id), ]
+  ## How many plot_groups are there?
+  table(plot.data$plot_group)
+ 
+    ## pick one plot_group to plot
+    group <- unique(plot.data$plot_group)[4]
+ 
+    ## Select scores for only one plot group
+    test.data <- plot.data.ordered[plot.data.ordered$plot_group %in% group, ]
+ 
+    ## Generate the group on/off scores for the combined data
+    group.OnOff <- OnOff(eset.sub, cell.change, out.put="marker.list")
+ 
+    calls <- assayDataElement(eset.sub, "calls")
+    rownames(calls) <- fData(eset.sub)[, "probe_id"]
+ 
+    ## Plot
+    heatmapOnOffMarkers(test.data, group.OnOff$markers, pData(eset.sub),
+                       calls)
+ }
Killed
* checking for unstated dependencies in vignettes ... OK
* checking package vignettes in ‘inst/doc’ ... OK
* checking running R code from vignettes ...
  ‘CellScoreVignette.Rnw’ using ‘UTF-8’... OK
 NONE
* checking re-building of vignette outputs ... ERROR
Error(s) in re-building vignettes:
  ...
--- re-building ‘CellScoreVignette.Rnw’ using knitr
Killed

* checking PDF version of manual ... OK
* DONE

Status: 2 ERRORs
See
  ‘/home/biocbuild/bbs-3.17-bioc/meat/CellScore.Rcheck/00check.log’
for details.

