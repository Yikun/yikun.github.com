##############################################################################
##############################################################################
###
### Running command:
###
###   /home/biocbuild/R/R-4.3.0-bin/bin/R CMD INSTALL mosbi
###
##############################################################################
##############################################################################


* installing to library ‘/home/biocbuild/R/R-4.3.0-bin/site-library’
* installing *source* package ‘mosbi’ ...
** using staged installation
** libs
using C++ compiler: ‘g++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0’
using C++17
g++ -std=gnu++17 -I"/home/biocbuild/R/R-4.3.0-bin/lib/R/include" -DNDEBUG  -I'/home/biocbuild/R/R-4.3.0-bin/site-library/Rcpp/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/RcppParallel/include' -I/usr/local/include    -fPIC  -g -O2  -c RcppExports.cpp -o RcppExports.o
g++ -std=gnu++17 -I"/home/biocbuild/R/R-4.3.0-bin/lib/R/include" -DNDEBUG  -I'/home/biocbuild/R/R-4.3.0-bin/site-library/Rcpp/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/RcppParallel/include' -I/usr/local/include    -fPIC  -g -O2  -c attr_graph.cpp -o attr_graph.o
g++ -std=gnu++17 -I"/home/biocbuild/R/R-4.3.0-bin/lib/R/include" -DNDEBUG  -I'/home/biocbuild/R/R-4.3.0-bin/site-library/Rcpp/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/RcppParallel/include' -I/usr/local/include    -fPIC  -g -O2  -c attributeConnector.cpp -o attributeConnector.o
g++ -std=gnu++17 -I"/home/biocbuild/R/R-4.3.0-bin/lib/R/include" -DNDEBUG  -I'/home/biocbuild/R/R-4.3.0-bin/site-library/Rcpp/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/RcppParallel/include' -I/usr/local/include    -fPIC  -g -O2  -c attribute_overlap.cpp -o attribute_overlap.o
g++ -std=gnu++17 -I"/home/biocbuild/R/R-4.3.0-bin/lib/R/include" -DNDEBUG  -I'/home/biocbuild/R/R-4.3.0-bin/site-library/Rcpp/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/RcppParallel/include' -I/usr/local/include    -fPIC  -g -O2  -c bicluster_methods.cpp -o bicluster_methods.o
g++ -std=gnu++17 -I"/home/biocbuild/R/R-4.3.0-bin/lib/R/include" -DNDEBUG  -I'/home/biocbuild/R/R-4.3.0-bin/site-library/Rcpp/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/RcppParallel/include' -I/usr/local/include    -fPIC  -g -O2  -c boost_graph.cpp -o boost_graph.o
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/scoped_ptr.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:22,
                 from boost_graph.cpp:2:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/smart_ptr/scoped_ptr.hpp:74:31: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
   74 |     explicit scoped_ptr( std::auto_ptr<T> p ) BOOST_SP_NOEXCEPT : px( p.release() )
      |                               ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/container_hash/hash.hpp:47,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/functional/hash.hpp:6,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered/unordered_set.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered_set.hpp:17,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:20,
                 from boost_graph.cpp:2:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/smart_ptr/shared_ptr.hpp:17,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/vector_property_map.hpp:14,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/property_map.hpp:598,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:27,
                 from boost_graph.cpp:2:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/smart_ptr/detail/shared_count.hpp:361:33: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  361 |     explicit shared_count( std::auto_ptr<Y> & r ): pi_( new sp_counted_impl_p<Y>( r.get() ) )
      |                                 ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/container_hash/hash.hpp:47,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/functional/hash.hpp:6,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered/unordered_set.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered_set.hpp:17,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:20,
                 from boost_graph.cpp:2:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/vector_property_map.hpp:14,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/property_map.hpp:598,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:27,
                 from boost_graph.cpp:2:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/smart_ptr/shared_ptr.hpp:250:65: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  250 | template< class T, class R > struct sp_enable_if_auto_ptr< std::auto_ptr< T >, R >
      |                                                                 ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/container_hash/hash.hpp:47,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/functional/hash.hpp:6,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered/unordered_set.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered_set.hpp:17,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:20,
                 from boost_graph.cpp:2:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/vector_property_map.hpp:14,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/property_map.hpp:598,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:27,
                 from boost_graph.cpp:2:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/smart_ptr/shared_ptr.hpp:507:31: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  507 |     explicit shared_ptr( std::auto_ptr<Y> & r ): px(r.get()), pn()
      |                               ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/container_hash/hash.hpp:47,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/functional/hash.hpp:6,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered/unordered_set.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered_set.hpp:17,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:20,
                 from boost_graph.cpp:2:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/vector_property_map.hpp:14,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/property_map.hpp:598,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:27,
                 from boost_graph.cpp:2:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/smart_ptr/shared_ptr.hpp:520:22: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  520 |     shared_ptr( std::auto_ptr<Y> && r ): px(r.get()), pn()
      |                      ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/container_hash/hash.hpp:47,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/functional/hash.hpp:6,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered/unordered_set.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered_set.hpp:17,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:20,
                 from boost_graph.cpp:2:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/vector_property_map.hpp:14,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/property_map.hpp:598,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:27,
                 from boost_graph.cpp:2:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/smart_ptr/shared_ptr.hpp:603:34: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  603 |     shared_ptr & operator=( std::auto_ptr<Y> & r )
      |                                  ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/container_hash/hash.hpp:47,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/functional/hash.hpp:6,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered/unordered_set.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered_set.hpp:17,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:20,
                 from boost_graph.cpp:2:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/vector_property_map.hpp:14,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/property_map.hpp:598,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:27,
                 from boost_graph.cpp:2:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/smart_ptr/shared_ptr.hpp:612:34: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  612 |     shared_ptr & operator=( std::auto_ptr<Y> && r )
      |                                  ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/container_hash/hash.hpp:47,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/functional/hash.hpp:6,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered/unordered_set.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered_set.hpp:17,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:20,
                 from boost_graph.cpp:2:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/vector_property_map.hpp:14,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/property_map.hpp:598,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:27,
                 from boost_graph.cpp:2:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/smart_ptr/shared_ptr.hpp: In member function ‘boost::shared_ptr<T>& boost::shared_ptr<T>::operator=(std::auto_ptr<_Up>&&)’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/smart_ptr/shared_ptr.hpp:614:38: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  614 |         this_type( static_cast< std::auto_ptr<Y> && >( r ) ).swap( *this );
      |                                      ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/container_hash/hash.hpp:47,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/functional/hash.hpp:6,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered/unordered_set.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered_set.hpp:17,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:20,
                 from boost_graph.cpp:2:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/bind/mem_fn.hpp:25,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/mem_fn.hpp:22,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/function/detail/prologue.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/function/function_template.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/function/detail/maybe_include.hpp:36,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/function/function3.hpp:11,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/dynamic_property_map.hpp:25,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/graphviz.hpp:25,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/graphml.hpp:20,
                 from boost_graph.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/get_pointer.hpp: At global scope:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/get_pointer.hpp:48:40: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
   48 | template<class T> T * get_pointer(std::auto_ptr<T> const& p)
      |                                        ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/container_hash/hash.hpp:47,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/functional/hash.hpp:6,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered/unordered_set.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered_set.hpp:17,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:20,
                 from boost_graph.cpp:2:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
g++ -std=gnu++17 -I"/home/biocbuild/R/R-4.3.0-bin/lib/R/include" -DNDEBUG  -I'/home/biocbuild/R/R-4.3.0-bin/site-library/Rcpp/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/RcppParallel/include' -I/usr/local/include    -fPIC  -g -O2  -c boost_write.cpp -o boost_write.o
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/scoped_ptr.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:22,
                 from boost_write.cpp:2:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/smart_ptr/scoped_ptr.hpp:74:31: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
   74 |     explicit scoped_ptr( std::auto_ptr<T> p ) BOOST_SP_NOEXCEPT : px( p.release() )
      |                               ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/container_hash/hash.hpp:47,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/functional/hash.hpp:6,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered/unordered_set.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered_set.hpp:17,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:20,
                 from boost_write.cpp:2:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/smart_ptr/shared_ptr.hpp:17,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/vector_property_map.hpp:14,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/property_map.hpp:598,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:27,
                 from boost_write.cpp:2:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/smart_ptr/detail/shared_count.hpp:361:33: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  361 |     explicit shared_count( std::auto_ptr<Y> & r ): pi_( new sp_counted_impl_p<Y>( r.get() ) )
      |                                 ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/container_hash/hash.hpp:47,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/functional/hash.hpp:6,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered/unordered_set.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered_set.hpp:17,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:20,
                 from boost_write.cpp:2:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/vector_property_map.hpp:14,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/property_map.hpp:598,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:27,
                 from boost_write.cpp:2:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/smart_ptr/shared_ptr.hpp:250:65: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  250 | template< class T, class R > struct sp_enable_if_auto_ptr< std::auto_ptr< T >, R >
      |                                                                 ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/container_hash/hash.hpp:47,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/functional/hash.hpp:6,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered/unordered_set.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered_set.hpp:17,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:20,
                 from boost_write.cpp:2:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/vector_property_map.hpp:14,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/property_map.hpp:598,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:27,
                 from boost_write.cpp:2:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/smart_ptr/shared_ptr.hpp:507:31: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  507 |     explicit shared_ptr( std::auto_ptr<Y> & r ): px(r.get()), pn()
      |                               ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/container_hash/hash.hpp:47,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/functional/hash.hpp:6,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered/unordered_set.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered_set.hpp:17,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:20,
                 from boost_write.cpp:2:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/vector_property_map.hpp:14,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/property_map.hpp:598,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:27,
                 from boost_write.cpp:2:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/smart_ptr/shared_ptr.hpp:520:22: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  520 |     shared_ptr( std::auto_ptr<Y> && r ): px(r.get()), pn()
      |                      ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/container_hash/hash.hpp:47,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/functional/hash.hpp:6,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered/unordered_set.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered_set.hpp:17,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:20,
                 from boost_write.cpp:2:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/vector_property_map.hpp:14,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/property_map.hpp:598,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:27,
                 from boost_write.cpp:2:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/smart_ptr/shared_ptr.hpp:603:34: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  603 |     shared_ptr & operator=( std::auto_ptr<Y> & r )
      |                                  ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/container_hash/hash.hpp:47,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/functional/hash.hpp:6,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered/unordered_set.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered_set.hpp:17,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:20,
                 from boost_write.cpp:2:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/vector_property_map.hpp:14,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/property_map.hpp:598,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:27,
                 from boost_write.cpp:2:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/smart_ptr/shared_ptr.hpp:612:34: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  612 |     shared_ptr & operator=( std::auto_ptr<Y> && r )
      |                                  ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/container_hash/hash.hpp:47,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/functional/hash.hpp:6,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered/unordered_set.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered_set.hpp:17,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:20,
                 from boost_write.cpp:2:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/vector_property_map.hpp:14,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/property_map.hpp:598,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:27,
                 from boost_write.cpp:2:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/smart_ptr/shared_ptr.hpp: In member function ‘boost::shared_ptr<T>& boost::shared_ptr<T>::operator=(std::auto_ptr<_Up>&&)’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/smart_ptr/shared_ptr.hpp:614:38: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  614 |         this_type( static_cast< std::auto_ptr<Y> && >( r ) ).swap( *this );
      |                                      ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/container_hash/hash.hpp:47,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/functional/hash.hpp:6,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered/unordered_set.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered_set.hpp:17,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:20,
                 from boost_write.cpp:2:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/bind/mem_fn.hpp:25,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/mem_fn.hpp:22,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/function/detail/prologue.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/function/function_template.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/function/detail/maybe_include.hpp:36,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/function/function3.hpp:11,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/property_map/dynamic_property_map.hpp:25,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/graphviz.hpp:25,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/graphml.hpp:20,
                 from boost_write.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/get_pointer.hpp: At global scope:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/get_pointer.hpp:48:40: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
   48 | template<class T> T * get_pointer(std::auto_ptr<T> const& p)
      |                                        ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/container_hash/hash.hpp:47,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/functional/hash.hpp:6,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered/unordered_set.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/unordered_set.hpp:17,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/graph/adjacency_list.hpp:20,
                 from boost_write.cpp:2:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
g++ -std=gnu++17 -I"/home/biocbuild/R/R-4.3.0-bin/lib/R/include" -DNDEBUG  -I'/home/biocbuild/R/R-4.3.0-bin/site-library/Rcpp/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/RcppParallel/include' -I/usr/local/include    -fPIC  -g -O2  -c distance_matrix.cpp -o distance_matrix.o
g++ -std=gnu++17 -I"/home/biocbuild/R/R-4.3.0-bin/lib/R/include" -DNDEBUG  -I'/home/biocbuild/R/R-4.3.0-bin/site-library/Rcpp/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/RcppParallel/include' -I/usr/local/include    -fPIC  -g -O2  -c extractBF.cpp -o extractBF.o
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/bind/mem_fn.hpp:25,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/mem_fn.hpp:22,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/function/detail/prologue.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/function.hpp:30,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/detail/find_iterator.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/find_iterator.hpp:24,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:27,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from extractBF.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/get_pointer.hpp:48:40: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
   48 | template<class T> T * get_pointer(std::auto_ptr<T> const& p)
      |                                        ^~~~~~~~
In file included from /usr/include/c++/11/bits/locale_conv.h:41,
                 from /usr/include/c++/11/locale:43,
                 from /usr/include/c++/11/iomanip:43,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/Rcpp/include/RcppCommon.h:53,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/Rcpp/include/Rcpp.h:27,
                 from extractBF.cpp:2:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractBF.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::token_finderF<getBFCluster(Rcpp::String, int)::<lambda(char)> >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:81:13:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<getBFCluster(Rcpp::String, int)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = getBFCluster(Rcpp::String, int)::<lambda(char)>]’
extractBF.cpp:79:21:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from extractBF.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::token_finderF<getBFCluster(Rcpp::String, int)::<lambda(char)> >; IteratorT = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractBF.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<getBFCluster(Rcpp::String, int)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = getBFCluster(Rcpp::String, int)::<lambda(char)>]’
extractBF.cpp:79:21:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractBF.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractBF.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>)>’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<getBFCluster(Rcpp::String, int)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = getBFCluster(Rcpp::String, int)::<lambda(char)>]’
extractBF.cpp:79:21:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractBF.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractBF.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<getBFCluster(Rcpp::String, int)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = getBFCluster(Rcpp::String, int)::<lambda(char)>]’
extractBF.cpp:79:21:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractBF.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractBF.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<getBFCluster(Rcpp::String, int)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = getBFCluster(Rcpp::String, int)::<lambda(char)>]’
extractBF.cpp:79:21:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractBF.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractBF.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<getBFCluster(Rcpp::String, int)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = getBFCluster(Rcpp::String, int)::<lambda(char)>]’
extractBF.cpp:79:21:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractBF.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractBF.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>)>’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:152:13:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<getBFCluster(Rcpp::String, int)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = getBFCluster(Rcpp::String, int)::<lambda(char)>]’
extractBF.cpp:79:21:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractBF.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractBF.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:152:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >)>’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<getBFCluster(Rcpp::String, int)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = getBFCluster(Rcpp::String, int)::<lambda(char)>]’
extractBF.cpp:79:21:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractBF.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractBF.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >)>’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<getBFCluster(Rcpp::String, int)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = getBFCluster(Rcpp::String, int)::<lambda(char)>]’
extractBF.cpp:79:21:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractBF.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractBF.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:278:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >)>’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<getBFCluster(Rcpp::String, int)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = getBFCluster(Rcpp::String, int)::<lambda(char)>]’
extractBF.cpp:79:21:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractBF.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractBF.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >)>’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<getBFCluster(Rcpp::String, int)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = getBFCluster(Rcpp::String, int)::<lambda(char)>]’
extractBF.cpp:79:21:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractBF.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractBF.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   required from ‘bool boost::range::equal(const SinglePassRange1&, const SinglePassRange2&) [with SinglePassRange1 = boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; SinglePassRange2 = boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:644:32:   required from ‘bool boost::operator==(const boost::iterator_range<IteratorT>&, const boost::iterator_range<Iterator2T>&) [with Iterator1T = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; Iterator2T = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/find_iterator.hpp:359:32:   required from ‘bool boost::algorithm::split_iterator<IteratorT>::equal(const boost::algorithm::split_iterator<IteratorT>&) const [with IteratorT = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:649:26:   required from ‘static bool boost::iterators::iterator_core_access::equal(const Facade1&, const Facade2&, mpl_::true_) [with Facade1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; Facade2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; mpl_::true_ = mpl_::bool_<true>]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:981:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator==(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; V1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; TC1 = boost::iterators::forward_traversal_tag; Reference1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >&; Difference1 = long int; Derived2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; V2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; TC2 = boost::iterators::forward_traversal_tag; Reference2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >&; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_adaptor.hpp:305:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<getBFCluster(Rcpp::String, int)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = getBFCluster(Rcpp::String, int)::<lambda(char)>]’
extractBF.cpp:79:21:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractBF.cpp:3:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<getBFCluster(Rcpp::String, int)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = getBFCluster(Rcpp::String, int)::<lambda(char)>]’
extractBF.cpp:79:21:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<getBFCluster(Rcpp::String, int)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = getBFCluster(Rcpp::String, int)::<lambda(char)>]’
extractBF.cpp:79:21:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<getBFCluster(Rcpp::String, int)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = getBFCluster(Rcpp::String, int)::<lambda(char)>]’
extractBF.cpp:79:21:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:136:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<getBFCluster(Rcpp::String, int)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = getBFCluster(Rcpp::String, int)::<lambda(char)>]’
extractBF.cpp:79:21:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<getBFCluster(Rcpp::String, int)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = getBFCluster(Rcpp::String, int)::<lambda(char)>]’
extractBF.cpp:79:21:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<getBFCluster(Rcpp::String, int)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = getBFCluster(Rcpp::String, int)::<lambda(char)>]’
extractBF.cpp:79:21:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<getBFCluster(Rcpp::String, int)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = getBFCluster(Rcpp::String, int)::<lambda(char)>]’
extractBF.cpp:79:21:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
g++ -std=gnu++17 -I"/home/biocbuild/R/R-4.3.0-bin/lib/R/include" -DNDEBUG  -I'/home/biocbuild/R/R-4.3.0-bin/site-library/Rcpp/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/RcppParallel/include' -I/usr/local/include    -fPIC  -g -O2  -c extractQUBIC2.cpp -o extractQUBIC2.o
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/bind/mem_fn.hpp:25,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/mem_fn.hpp:22,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/function/detail/prologue.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/function.hpp:30,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/detail/find_iterator.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/find_iterator.hpp:24,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:27,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/get_pointer.hpp:48:40: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
   48 | template<class T> T * get_pointer(std::auto_ptr<T> const& p)
      |                                        ^~~~~~~~
In file included from /usr/include/c++/11/bits/locale_conv.h:41,
                 from /usr/include/c++/11/locale:43,
                 from /usr/include/c++/11/iomanip:43,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/Rcpp/include/RcppCommon.h:53,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/Rcpp/include/Rcpp.h:27,
                 from extractQUBIC2.cpp:2:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::token_finderF<extract_gene(std::string&, int&)::<lambda(char)> >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:81:13:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<extract_gene(std::string&, int&)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = extract_gene(std::string&, int&)::<lambda(char)>]’
extractQUBIC2.cpp:29:17:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::token_finderF<extract_gene(std::string&, int&)::<lambda(char)> >; IteratorT = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::token_finderF<extract_cond(std::string&, int&)::<lambda(char)> >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:81:13:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<extract_cond(std::string&, int&)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = extract_cond(std::string&, int&)::<lambda(char)>]’
extractQUBIC2.cpp:55:17:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::token_finderF<extract_cond(std::string&, int&)::<lambda(char)> >; IteratorT = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<extract_gene(std::string&, int&)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = extract_gene(std::string&, int&)::<lambda(char)>]’
extractQUBIC2.cpp:29:17:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>)>’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<extract_gene(std::string&, int&)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = extract_gene(std::string&, int&)::<lambda(char)>]’
extractQUBIC2.cpp:29:17:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<extract_gene(std::string&, int&)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = extract_gene(std::string&, int&)::<lambda(char)>]’
extractQUBIC2.cpp:29:17:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<extract_gene(std::string&, int&)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = extract_gene(std::string&, int&)::<lambda(char)>]’
extractQUBIC2.cpp:29:17:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<extract_gene(std::string&, int&)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = extract_gene(std::string&, int&)::<lambda(char)>]’
extractQUBIC2.cpp:29:17:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>)>’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:152:13:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<extract_gene(std::string&, int&)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = extract_gene(std::string&, int&)::<lambda(char)>]’
extractQUBIC2.cpp:29:17:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:152:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >)>’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<extract_gene(std::string&, int&)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = extract_gene(std::string&, int&)::<lambda(char)>]’
extractQUBIC2.cpp:29:17:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >)>’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<extract_gene(std::string&, int&)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = extract_gene(std::string&, int&)::<lambda(char)>]’
extractQUBIC2.cpp:29:17:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:278:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >)>’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<extract_gene(std::string&, int&)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = extract_gene(std::string&, int&)::<lambda(char)>]’
extractQUBIC2.cpp:29:17:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >)>’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<extract_gene(std::string&, int&)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = extract_gene(std::string&, int&)::<lambda(char)>]’
extractQUBIC2.cpp:29:17:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   required from ‘bool boost::range::equal(const SinglePassRange1&, const SinglePassRange2&) [with SinglePassRange1 = boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; SinglePassRange2 = boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:644:32:   required from ‘bool boost::operator==(const boost::iterator_range<IteratorT>&, const boost::iterator_range<Iterator2T>&) [with Iterator1T = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; Iterator2T = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/find_iterator.hpp:359:32:   required from ‘bool boost::algorithm::split_iterator<IteratorT>::equal(const boost::algorithm::split_iterator<IteratorT>&) const [with IteratorT = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:649:26:   required from ‘static bool boost::iterators::iterator_core_access::equal(const Facade1&, const Facade2&, mpl_::true_) [with Facade1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; Facade2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; mpl_::true_ = mpl_::bool_<true>]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:981:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator==(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; V1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; TC1 = boost::iterators::forward_traversal_tag; Reference1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >&; Difference1 = long int; Derived2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; V2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; TC2 = boost::iterators::forward_traversal_tag; Reference2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >&; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_adaptor.hpp:305:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<extract_gene(std::string&, int&)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = extract_gene(std::string&, int&)::<lambda(char)>]’
extractQUBIC2.cpp:29:17:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:31,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/size.hpp:21,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/functions.hpp:20,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from extractQUBIC2.cpp:7:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<extract_gene(std::string&, int&)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = extract_gene(std::string&, int&)::<lambda(char)>]’
extractQUBIC2.cpp:29:17:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<extract_gene(std::string&, int&)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = extract_gene(std::string&, int&)::<lambda(char)>]’
extractQUBIC2.cpp:29:17:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<extract_gene(std::string&, int&)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = extract_gene(std::string&, int&)::<lambda(char)>]’
extractQUBIC2.cpp:29:17:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:136:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<extract_gene(std::string&, int&)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = extract_gene(std::string&, int&)::<lambda(char)>]’
extractQUBIC2.cpp:29:17:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<extract_gene(std::string&, int&)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = extract_gene(std::string&, int&)::<lambda(char)>]’
extractQUBIC2.cpp:29:17:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<extract_gene(std::string&, int&)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = extract_gene(std::string&, int&)::<lambda(char)>]’
extractQUBIC2.cpp:29:17:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’:
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >::value’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<extract_gene(std::string&, int&)::<lambda(char)> >]’
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = extract_gene(std::string&, int&)::<lambda(char)>]’
extractQUBIC2.cpp:29:17:   required from here
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
g++ -std=gnu++17 -I"/home/biocbuild/R/R-4.3.0-bin/lib/R/include" -DNDEBUG  -I'/home/biocbuild/R/R-4.3.0-bin/site-library/Rcpp/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/RcppParallel/include' -I/usr/local/include    -fPIC  -g -O2  -c full_graph.cpp -o full_graph.o
g++ -std=gnu++17 -I"/home/biocbuild/R/R-4.3.0-bin/lib/R/include" -DNDEBUG  -I'/home/biocbuild/R/R-4.3.0-bin/site-library/Rcpp/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/RcppParallel/include' -I/usr/local/include    -fPIC  -g -O2  -c misc.cpp -o misc.o
g++ -std=gnu++17 -I"/home/biocbuild/R/R-4.3.0-bin/lib/R/include" -DNDEBUG  -I'/home/biocbuild/R/R-4.3.0-bin/site-library/Rcpp/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/RcppParallel/include' -I/usr/local/include    -fPIC  -g -O2  -c network_edge_strength.cpp -o network_edge_strength.o
g++ -std=gnu++17 -I"/home/biocbuild/R/R-4.3.0-bin/lib/R/include" -DNDEBUG  -I'/home/biocbuild/R/R-4.3.0-bin/site-library/Rcpp/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/RcppParallel/include' -I/usr/local/include    -fPIC  -g -O2  -c sample_biclusters.cpp -o sample_biclusters.o
g++ -std=gnu++17 -I"/home/biocbuild/R/R-4.3.0-bin/lib/R/include" -DNDEBUG  -I'/home/biocbuild/R/R-4.3.0-bin/site-library/Rcpp/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/BH/include' -I'/home/biocbuild/R/R-4.3.0-bin/site-library/RcppParallel/include' -I/usr/local/include    -fPIC  -g -O2  -c write_matrix.cpp -o write_matrix.o
g++ -std=gnu++17 -shared -L/home/biocbuild/R/R-4.3.0-bin/lib/R/lib -L/usr/local/lib -o mosbi.so RcppExports.o attr_graph.o attributeConnector.o attribute_overlap.o bicluster_methods.o boost_graph.o boost_write.o distance_matrix.o extractBF.o extractQUBIC2.o full_graph.o misc.o network_edge_strength.o sample_biclusters.o write_matrix.o -L/home/biocbuild/R/R-4.3.0-bin/lib/R/lib -lR
installing to /home/biocbuild/R/R-4.3.0-bin/site-library/00LOCK-mosbi/00new/mosbi/libs
** R
** data
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* DONE (mosbi)
