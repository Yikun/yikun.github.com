##############################################################################
##############################################################################
###
### Running command:
###
###   /home/biocbuild/R/R-4.3.0-bin/bin/R CMD check --install=check:DECIPHER.install-out.txt --library=/home/biocbuild/R/R-4.3.0-bin/site-library --timings DECIPHER_2.29.0.tar.gz
###
##############################################################################
##############################################################################


* using log directory ‘/home/biocbuild/bbs-3.18-bioc/meat/DECIPHER.Rcheck’
* using R version 4.3.0 (2023-04-21)
* using platform: aarch64-unknown-linux-gnu (64-bit)
* R was compiled by
    gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
    GNU Fortran (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
* running under: Ubuntu 22.04.2 LTS
* using session charset: UTF-8
* checking for file ‘DECIPHER/DESCRIPTION’ ... OK
* checking extension type ... Package
* this is package ‘DECIPHER’ version ‘2.29.0’
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ‘DECIPHER’ can be installed ... OK
* used C compiler: ‘gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0’
* checking installed package size ... NOTE
  installed size is 12.9Mb
  sub-directories of 1Mb or more:
    R         1.4Mb
    data      7.5Mb
    extdata   2.3Mb
    libs      1.3Mb
* checking package directory ... OK
* checking ‘build’ directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
DesignSignatures: no visible binding for global variable ‘deltaHrules’
FindGenes: no visible binding for global variable ‘deltaHrulesRNA’
FindNonCoding: no visible binding for global variable ‘deltaHrulesRNA’
LearnNonCoding: no visible binding for global variable ‘deltaHrulesRNA’
PredictDBN: no visible binding for global variable ‘deltaGrulesRNA’
TreeLine: multiple local function definitions for ‘.minimize’ with
  different formal arguments
Undefined global functions or variables:
  deltaGrulesRNA deltaHrules deltaHrulesRNA
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking contents of ‘data’ directory ... OK
* checking data for non-ASCII characters ... OK
* checking data for ASCII and uncompressed saves ... OK
* checking line endings in C/C++/Fortran sources/headers ... OK
* checking line endings in Makefiles ... OK
* checking compilation flags in Makevars ... OK
* checking for GNU extensions in Makefiles ... OK
* checking for portable use of $(BLAS_LIBS) and $(LAPACK_LIBS) ... OK
* checking use of PKG_*FLAGS in Makefiles ... OK
* checking compiled code ... NOTE
Note: information on .o files is not available
* checking files in ‘vignettes’ ... OK
* checking examples ... OK
Examples with CPU (user + system) or elapsed time > 5s
                      user system elapsed
MapCharacters      110.780  0.356 111.137
FindNonCoding      103.061  0.456 103.512
LearnNonCoding      77.703  3.723  81.425
ExtractGenes        51.487  0.444  51.930
FindGenes           49.716  0.164  49.876
WriteGenes          48.700  0.180  48.879
Genes-class         47.728  0.268  47.994
BrowseSeqs          28.933  0.252  29.218
AlignSeqs           26.971  0.572  27.544
DetectRepeats       22.603  0.132  22.737
CorrectFrameshifts  19.533  0.108  19.641
StaggerAlignment    17.517  0.264  17.780
LearnTaxa           16.835  0.492  17.327
AlignTranslation    14.679  0.148  14.829
Taxa-class          13.273  0.048  13.321
IdTaxa              11.811  0.044  11.854
TreeLine            11.106  0.080  11.187
Clusterize           9.028  0.120   9.148
ScoreAlignment       6.879  0.044   6.923
TileSeqs             5.631  0.004   5.635
Array2Matrix         5.494  0.064   5.559
DesignArray          5.429  0.065   5.494
* checking for unstated dependencies in vignettes ... OK
* checking package vignettes in ‘inst/doc’ ... OK
* checking running R code from vignettes ...
  ‘ArtOfAlignmentInR.Rnw’... OK
  ‘ClassifySequences.Rnw’... OK
  ‘ClusteringSequences.Rnw’... OK
  ‘DECIPHERing.Rnw’... OK
  ‘DesignMicroarray.Rnw’... OK
  ‘DesignPrimers.Rnw’... OK
  ‘DesignProbes.Rnw’... OK
  ‘DesignSignatures.Rnw’... OK
  ‘FindChimeras.Rnw’... OK
  ‘FindingGenes.Rnw’... OK
  ‘FindingNonCodingRNAs.Rnw’... OK
  ‘GrowingTrees.Rnw’... OK
  ‘RepeatRepeat.Rnw’... OK
 OK
* checking re-building of vignette outputs ...