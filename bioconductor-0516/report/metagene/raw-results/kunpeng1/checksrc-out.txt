##############################################################################
##############################################################################
###
### Running command:
###
###   /home/biocbuild/R/R-4.3.0-bin/bin/R CMD check --install=check:metagene.install-out.txt --library=/home/biocbuild/R/R-4.3.0-bin/site-library --timings metagene_2.33.0.tar.gz
###
##############################################################################
##############################################################################


* using log directory ‘/home/biocbuild/bbs-3.18-bioc/meat/metagene.Rcheck’
* using R version 4.3.0 (2023-04-21)
* using platform: aarch64-unknown-linux-gnu (64-bit)
* R was compiled by
    gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
    GNU Fortran (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
* running under: Ubuntu 22.04.2 LTS
* using session charset: UTF-8
* checking for file ‘metagene/DESCRIPTION’ ... OK
* this is package ‘metagene’ version ‘2.33.0’
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ‘metagene’ can be installed ... OK
* checking installed package size ... NOTE
  installed size is  7.2Mb
  sub-directories of 1Mb or more:
    extdata   5.4Mb
* checking package directory ... OK
* checking ‘build’ directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
NCIS.internal: no visible global function definition for
  'est.norm.med.search'
avoid_gaps_update: no visible binding for global variable 'value'
avoid_gaps_update: no visible binding for global variable 'bam'
avoid_gaps_update: no visible binding for global variable 'tab'
avoid_gaps_update: no visible binding for global variable 'nuc'
bin.data: no visible global function definition for 'hist'
permutation_test: no visible global function definition for '.'
permutation_test: no visible binding for global variable 'value'
plot_metagene: no visible binding for global variable 'bin'
plot_metagene: no visible binding for global variable 'value'
plot_metagene: no visible binding for global variable 'qinf'
plot_metagene: no visible binding for global variable 'qsup'
plot_metagene: no visible binding for global variable 'group'
plot_metagene: no visible binding for global variable 'nuc'
plot_metagene: no visible binding for global variable 'design'
plot_metagene: no visible binding for global variable 'nuctot'
Undefined global functions or variables:
  . bam bin design est.norm.med.search group hist nuc nuctot qinf qsup
  tab value
Consider adding
  importFrom("graphics", "hist")
to your NAMESPACE file.
* checking Rd files ... WARNING
checkRd: (5) Bam_Handler.Rd:22: \item in \describe must have non-empty label
checkRd: (5) Bam_Handler.Rd:42: \item in \describe must have non-empty label
checkRd: (5) Bam_Handler.Rd:46: \item in \describe must have non-empty label
checkRd: (5) Bam_Handler.Rd:50: \item in \describe must have non-empty label
checkRd: (5) Bam_Handler.Rd:54: \item in \describe must have non-empty label
checkRd: (5) Bam_Handler.Rd:58: \item in \describe must have non-empty label
checkRd: (5) Bam_Handler.Rd:61-62: \item in \describe must have non-empty label
checkRd: (5) Bam_Handler.Rd:71-72: \item in \describe must have non-empty label
checkRd: (5) Bam_Handler.Rd:81: \item in \describe must have non-empty label
checkRd: (5) metagene.Rd:23-26: \item in \describe must have non-empty label
checkRd: (5) metagene.Rd:61-62: \item in \describe must have non-empty label
checkRd: (5) metagene.Rd:77-78: \item in \describe must have non-empty label
checkRd: (5) metagene.Rd:102-103: \item in \describe must have non-empty label
checkRd: (5) metagene.Rd:116: \item in \describe must have non-empty label
checkRd: (5) metagene.Rd:119: \item in \describe must have non-empty label
checkRd: (5) metagene.Rd:122: \item in \describe must have non-empty label
checkRd: (5) metagene.Rd:127: \item in \describe must have non-empty label
checkRd: (5) metagene.Rd:130: \item in \describe must have non-empty label
checkRd: (5) metagene.Rd:133: \item in \describe must have non-empty label
checkRd: (5) metagene.Rd:144: \item in \describe must have non-empty label
checkRd: (5) metagene.Rd:147: \item in \describe must have non-empty label
checkRd: (5) metagene.Rd:155: \item in \describe must have non-empty label
checkRd: (5) metagene.Rd:164: \item in \describe must have non-empty label
checkRd: (5) metagene.Rd:170: \item in \describe must have non-empty label
checkRd: (5) metagene.Rd:179: \item in \describe must have non-empty label
checkRd: (5) metagene.Rd:183: \item in \describe must have non-empty label
checkRd: (5) metagene.Rd:186: \item in \describe must have non-empty label
* checking Rd metadata ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking contents of ‘data’ directory ... OK
* checking data for non-ASCII characters ... OK
* checking LazyData ... OK
* checking data for ASCII and uncompressed saves ... OK
* checking R/sysdata.rda ... OK
* checking line endings in Makefiles ... OK
* checking for GNU extensions in Makefiles ... OK
* checking include directives in Makefiles ... OK
* checking files in ‘vignettes’ ... OK
* checking examples ... OK
* checking for unstated dependencies in ‘tests’ ... OK
* checking tests ...
  Running ‘runTests.R’
 ERROR
Running the tests in ‘tests/runTests.R’ failed.
Last 13 lines of output:
   
  
  Test files with failing tests
  
     test_parallel_job.R 
       test.parallel_job_get_core_count_valid_multiple_core 
       test.parallel_job_get_core_count_valid_single_core 
       test.parallel_job_set_core_count_valid_multiple_core 
       test.parallel_job_set_core_count_valid_single_core 
  
  
  Error in BiocGenerics:::testPackage("metagene") : 
    unit tests failed for package metagene
  In addition: There were 50 or more warnings (use warnings() to see the first 50)
  Execution halted
* checking for unstated dependencies in vignettes ... OK
* checking package vignettes in ‘inst/doc’ ... OK
* checking running R code from vignettes ...
  ‘metagene.Rmd’ using ‘UTF-8’... OK
  ‘metagene_rnaseq.Rmd’ using ‘UTF-8’... OK
 NONE
* checking re-building of vignette outputs ... OK
* checking PDF version of manual ... OK
* DONE

Status: 1 ERROR, 1 WARNING, 2 NOTEs
See
  ‘/home/biocbuild/bbs-3.18-bioc/meat/metagene.Rcheck/00check.log’
for details.

