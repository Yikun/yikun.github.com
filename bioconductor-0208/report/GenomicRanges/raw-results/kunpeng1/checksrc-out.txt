##############################################################################
##############################################################################
###
### Running command:
###
###   /home/biocbuild/bbs-3.17-bioc/R/bin/R CMD check --install=check:GenomicRanges.install-out.txt --library=/home/biocbuild/bbs-3.17-bioc/R/library --timings GenomicRanges_1.51.4.tar.gz
###
##############################################################################
##############################################################################


* using log directory ‘/home/biocbuild/bbs-3.17-bioc/meat/GenomicRanges.Rcheck’
* using R Under development (unstable) (2023-01-14 r83615)
* using platform: aarch64-unknown-linux-gnu (64-bit)
* R was compiled by
    gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
    GNU Fortran (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
* running under: Ubuntu 22.04.1 LTS
* using session charset: UTF-8
* checking for file ‘GenomicRanges/DESCRIPTION’ ... OK
* this is package ‘GenomicRanges’ version ‘1.51.4’
* package encoding: UTF-8
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ‘GenomicRanges’ can be installed ... OK
* used C compiler: ‘gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0’
* checking installed package size ... OK
* checking package directory ... OK
* checking ‘build’ directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... NOTE
Problems with news in ‘NEWS’:
  Cannot process chunk/lines:
    SIGNIFICANT USER-VISIBLE CHANGES
  Cannot process chunk/lines:
    DEPRECATED AND DEFUNCT
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... OK
* checking Rd files ... WARNING
checkRd: (5) GRanges-class.Rd:115-165: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:173-176: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:177-182: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:183-187: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:188-191: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:192-195: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:196-199: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:200-204: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:205-208: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:209-218: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:219-223: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:224-228: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:229-238: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:239-245: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:246-251: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:252-257: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:258-263: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:264-267: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:268-276: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:284-299: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:300-307: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:308-322: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:323-332: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:333-342: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:343-349: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:356-361: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:368-371: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:372-376: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:377-380: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:381-394: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:409-415: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:421-427: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:433-445: \item in \describe must have non-empty label
checkRd: (5) GRanges-class.Rd:453-466: \item in \describe must have non-empty label
* checking Rd metadata ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking line endings in C/C++/Fortran sources/headers ... OK
* checking compiled code ... NOTE
Note: information on .o files is not available
* checking files in ‘vignettes’ ... OK
* checking examples ... ERROR
Running examples in ‘GenomicRanges-Ex.R’ failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: makeGRangesFromDataFrame
> ### Title: Make a GRanges object from a data.frame or DataFrame
> ### Aliases: makeGRangesFromDataFrame coerce,data.frame,GRanges-method
> ###   coerce,DataFrame,GRanges-method
> ### Keywords: manip
> 
> ### ** Examples
> 
> ## ---------------------------------------------------------------------
> ## BASIC EXAMPLES
> ## ---------------------------------------------------------------------
> 
> df <- data.frame(chr="chr1", start=11:15, end=12:16,
+                  strand=c("+","-","+","*","."), score=1:5)
> df
   chr start end strand score
1 chr1    11  12      +     1
2 chr1    12  13      -     2
3 chr1    13  14      +     3
4 chr1    14  15      *     4
5 chr1    15  16      .     5
> makeGRangesFromDataFrame(df)  # strand value "." is replaced with "*"
GRanges object with 5 ranges and 0 metadata columns:
      seqnames    ranges strand
         <Rle> <IRanges>  <Rle>
  [1]     chr1     11-12      +
  [2]     chr1     12-13      -
  [3]     chr1     13-14      +
  [4]     chr1     14-15      *
  [5]     chr1     15-16      *
  -------
  seqinfo: 1 sequence from an unspecified genome; no seqlengths
> 
> ## NA in ranges
> df$start[5] <- df$end[2] <- NA
> df
   chr start end strand score
1 chr1    11  12      +     1
2 chr1    12  NA      -     2
3 chr1    13  14      +     3
4 chr1    14  15      *     4
5 chr1    NA  16      .     5
> #makeGRangesFromDataFrame(df)  # error!
> makeGRangesFromDataFrame(df, na.rm=TRUE)  # rows with NAs got dropped
GRanges object with 3 ranges and 0 metadata columns:
      seqnames    ranges strand
         <Rle> <IRanges>  <Rle>
  [1]     chr1     11-12      +
  [2]     chr1     13-14      +
  [3]     chr1     14-15      *
  -------
  seqinfo: 1 sequence from an unspecified genome; no seqlengths
> 
> ## The strand column is optional:
> df <- data.frame(chr="chr1", start=11:15, end=12:16, score=1:5)
> makeGRangesFromDataFrame(df)
GRanges object with 5 ranges and 0 metadata columns:
      seqnames    ranges strand
         <Rle> <IRanges>  <Rle>
  [1]     chr1     11-12      *
  [2]     chr1     12-13      *
  [3]     chr1     13-14      *
  [4]     chr1     14-15      *
  [5]     chr1     15-16      *
  -------
  seqinfo: 1 sequence from an unspecified genome; no seqlengths
> 
> gr <- makeGRangesFromDataFrame(df, keep.extra.columns=TRUE)
> gr2 <- as(df, "GRanges")  # equivalent to the above
> stopifnot(identical(gr, gr2))
> gr2 <- GRanges(df)        # equivalent to the above
> stopifnot(identical(gr, gr2))
> 
> makeGRangesFromDataFrame(df, ignore.strand=TRUE)
GRanges object with 5 ranges and 0 metadata columns:
      seqnames    ranges strand
         <Rle> <IRanges>  <Rle>
  [1]     chr1     11-12      *
  [2]     chr1     12-13      *
  [3]     chr1     13-14      *
  [4]     chr1     14-15      *
  [5]     chr1     15-16      *
  -------
  seqinfo: 1 sequence from an unspecified genome; no seqlengths
> makeGRangesFromDataFrame(df, keep.extra.columns=TRUE,
+                              ignore.strand=TRUE)
GRanges object with 5 ranges and 1 metadata column:
      seqnames    ranges strand |     score
         <Rle> <IRanges>  <Rle> | <integer>
  [1]     chr1     11-12      * |         1
  [2]     chr1     12-13      * |         2
  [3]     chr1     13-14      * |         3
  [4]     chr1     14-15      * |         4
  [5]     chr1     15-16      * |         5
  -------
  seqinfo: 1 sequence from an unspecified genome; no seqlengths
> 
> makeGRangesFromDataFrame(df, seqinfo=paste0("chr", 4:1))
GRanges object with 5 ranges and 0 metadata columns:
      seqnames    ranges strand
         <Rle> <IRanges>  <Rle>
  [1]     chr1     11-12      *
  [2]     chr1     12-13      *
  [3]     chr1     13-14      *
  [4]     chr1     14-15      *
  [5]     chr1     15-16      *
  -------
  seqinfo: 4 sequences from an unspecified genome; no seqlengths
> makeGRangesFromDataFrame(df, seqinfo=c(chrM=NA, chr1=500, chrX=100))
GRanges object with 5 ranges and 0 metadata columns:
      seqnames    ranges strand
         <Rle> <IRanges>  <Rle>
  [1]     chr1     11-12      *
  [2]     chr1     12-13      *
  [3]     chr1     13-14      *
  [4]     chr1     14-15      *
  [5]     chr1     15-16      *
  -------
  seqinfo: 3 sequences from an unspecified genome
> makeGRangesFromDataFrame(df, seqinfo=Seqinfo(paste0("chr", 4:1)))
GRanges object with 5 ranges and 0 metadata columns:
      seqnames    ranges strand
         <Rle> <IRanges>  <Rle>
  [1]     chr1     11-12      *
  [2]     chr1     12-13      *
  [3]     chr1     13-14      *
  [4]     chr1     14-15      *
  [5]     chr1     15-16      *
  -------
  seqinfo: 4 sequences from an unspecified genome; no seqlengths
> 
> ## ---------------------------------------------------------------------
> ## ABOUT AUTOMATIC DETECTION OF THE seqnames/start/end/strand COLUMNS
> ## ---------------------------------------------------------------------
> 
> ## Automatic detection of the seqnames/start/end/strand columns is
> ## case insensitive:
> df <- data.frame(ChRoM="chr1", StarT=11:15, stoP=12:16,
+                  STRAND=c("+","-","+","*","."), score=1:5)
> makeGRangesFromDataFrame(df)
GRanges object with 5 ranges and 0 metadata columns:
      seqnames    ranges strand
         <Rle> <IRanges>  <Rle>
  [1]     chr1     11-12      +
  [2]     chr1     12-13      -
  [3]     chr1     13-14      +
  [4]     chr1     14-15      *
  [5]     chr1     15-16      *
  -------
  seqinfo: 1 sequence from an unspecified genome; no seqlengths
> 
> ## It also ignores a common prefix between the start and end columns:
> df <- data.frame(seqnames="chr1", tx_start=11:15, tx_end=12:16,
+                  strand=c("+","-","+","*","."), score=1:5)
> makeGRangesFromDataFrame(df)
GRanges object with 5 ranges and 0 metadata columns:
      seqnames    ranges strand
         <Rle> <IRanges>  <Rle>
  [1]     chr1     11-12      +
  [2]     chr1     12-13      -
  [3]     chr1     13-14      +
  [4]     chr1     14-15      *
  [5]     chr1     15-16      *
  -------
  seqinfo: 1 sequence from an unspecified genome; no seqlengths
> 
> ## The common prefix between the start and end columns is used to
> ## disambiguate between more than one seqnames column:
> df <- data.frame(chrom="chr1", tx_start=11:15, tx_end=12:16,
+                  tx_chr="chr2", score=1:5)
> makeGRangesFromDataFrame(df)
GRanges object with 5 ranges and 0 metadata columns:
      seqnames    ranges strand
         <Rle> <IRanges>  <Rle>
  [1]     chr2     11-12      *
  [2]     chr2     12-13      *
  [3]     chr2     13-14      *
  [4]     chr2     14-15      *
  [5]     chr2     15-16      *
  -------
  seqinfo: 1 sequence from an unspecified genome; no seqlengths
> 
> ## ---------------------------------------------------------------------
> ## 0-BASED VS 1-BASED START POSITIONS
> ## ---------------------------------------------------------------------
> 
> if (require(rtracklayer)) {
+   session <- browserSession()
+   genome(session) <- "sacCer2"
+   query <- ucscTableQuery(session, "Assembly")
+   df <- getTable(query)
+   head(df)
+ 
+   ## A common pitfall is to forget that the UCSC Table Browser uses the
+   ## "0-based start" convention:
+   gr0 <- makeGRangesFromDataFrame(df, keep.extra.columns=TRUE,
+                                       start.field="chromStart",
+                                       end.field="chromEnd")
+   head(gr0)
+ 
+   ## The start positions need to be converted into 1-based positions,
+   ## to adhere to the convention used in Bioconductor:
+   gr1 <- makeGRangesFromDataFrame(df, keep.extra.columns=TRUE,
+                                       start.field="chromStart",
+                                       end.field="chromEnd",
+                                       starts.in.df.are.0based=TRUE)
+   head(gr1)
+ }
Loading required package: rtracklayer
Warning in .local(x, ...) :
  'track' parameter is deprecated now you go by the 'table' instead
                Use ucscTables(genome, track) to retrieve the list of tables for a track
Killed
* checking for unstated dependencies in ‘tests’ ... OK
* checking tests ...
  Running ‘run_unitTests.R’
 OK
* checking for unstated dependencies in vignettes ... OK
* checking package vignettes in ‘inst/doc’ ... OK
* checking running R code from vignettes ...
  ‘GenomicRangesIntroduction.Rmd’ using ‘UTF-8’... OK
  ‘ExtendingGenomicRanges.Rnw’ using ‘UTF-8’... OK
  ‘GRanges_and_GRangesList_slides.Rnw’ using ‘UTF-8’... OK
  ‘GenomicRangesHOWTOs.Rnw’ using ‘UTF-8’... OK
  ‘Ten_things_slides.Rnw’ using ‘UTF-8’... OK
 OK
* checking re-building of vignette outputs ... OK
* checking PDF version of manual ... OK
* DONE

Status: 1 ERROR, 1 WARNING, 2 NOTEs
See
  ‘/home/biocbuild/bbs-3.17-bioc/meat/GenomicRanges.Rcheck/00check.log’
for details.

