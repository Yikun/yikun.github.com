##############################################################################
##############################################################################
###
### Running command:
###
###   /home/biocbuild/bbs-3.17-bioc/R/bin/R CMD check --install=check:SpliceWiz.install-out.txt --library=/home/biocbuild/bbs-3.17-bioc/R/library --timings SpliceWiz_1.1.5.tar.gz
###
##############################################################################
##############################################################################


* using log directory ‘/home/biocbuild/bbs-3.17-bioc/meat/SpliceWiz.Rcheck’
* using R Under development (unstable) (2023-01-14 r83615)
* using platform: aarch64-unknown-linux-gnu (64-bit)
* R was compiled by
    gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
    GNU Fortran (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
* running under: Ubuntu 22.04.1 LTS
* using session charset: UTF-8
* checking for file ‘SpliceWiz/DESCRIPTION’ ... OK
* this is package ‘SpliceWiz’ version ‘1.1.5’
* package encoding: UTF-8
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ‘SpliceWiz’ can be installed ... OK
* used C++ compiler: ‘g++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0’
* checking installed package size ... NOTE
  installed size is 12.1Mb
  sub-directories of 1Mb or more:
    R      2.0Mb
    libs   9.0Mb
* checking package directory ... OK
* checking ‘build’ directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
Killed
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... NOTE
Killed
The \usage entries for S3 methods should use the \method markup and not
their full name.
See chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking line endings in shell scripts ... OK
* checking line endings in C/C++/Fortran sources/headers ... OK
* checking line endings in Makefiles ... OK
* checking compilation flags in Makevars ... OK
* checking for GNU extensions in Makefiles ... OK
* checking for portable use of $(BLAS_LIBS) and $(LAPACK_LIBS) ... OK
* checking use of PKG_*FLAGS in Makefiles ... OK
* checking compiled code ... NOTE
Note: information on .o files is not available
* checking files in ‘vignettes’ ... OK
* checking examples ... ERROR
Running examples in ‘SpliceWiz-Ex.R’ failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: ASE-GLM-edgeR
> ### Title: Using Generalised linear models to analyse differential ASEs
> ###   using edgeR
> ### Aliases: ASE-GLM-edgeR fitASE_edgeR fitASE_edgeR_custom testASE_edgeR
> ###   addPSI_edgeR
> 
> ### ** Examples
> 
> # Load the NxtSE object and set up the annotations
> # - see ?makeSE on example code of generating this NxtSE object
> se <- SpliceWiz_example_NxtSE()
> 
> colData(se)$treatment <- rep(c("A", "B"), each = 3)
> colData(se)$replicate <- rep(c("P","Q","R"), 2)
> require("edgeR")
Loading required package: edgeR
Loading required package: limma
> 
> fit <- fitASE_edgeR(
+     se, 
+     strModelFormula = "~0 + replicate + treatment", 
+     strASEFormula = "~0 + replicate + treatment + treatment:ASE"
+ )
Feb 07 16:45:23 Fitting edgeR contrast for included / excluded counts separately
Feb 07 16:45:24 Fitting edgeR contrast for included / excluded counts together
> 
> # Get coefficient terms of Included / Excluded counts isolated model
> colnames(fit$model_IncExc)
[1] "replicateP" "replicateQ" "replicateR" "treatmentB"
> # [1] "replicateP" "replicateQ" "replicateR" "treatmentB"
> 
> # Get coefficient terms of PSI model
> colnames(fit$model_ASE)
[1] "replicateP"             "replicateQ"             "replicateR"            
[4] "treatmentB"             "treatmentA:ASEIncluded" "treatmentB:ASEIncluded"
> # [1] "replicateP" "replicateQ" "replicateR" "treatmentB"            
> # [5] "treatmentA:ASEIncluded" "treatmentB:ASEIncluded"
> 
> # Contrast between treatment "B" against treatment "A"
> res <- testASE_edgeR(se, fit,
+     contrast_IncExc = c(0,0,0,1),
+     contrast_ASE = c(0,0,0,0,-1,1)
+ )
> 
> ### # Add mean PSI values to results:
> res_withPSI <- addPSI_edgeR(res, se, "treatment", c("B", "A"))
> 
> 
> ### Using custom model matrices to model counts
> #   - the equivalent analysis can be performed as follows:
> 
> # Sample annotations for isoform count expressions
> colData <- as.data.frame(colData(se))
> 
> # Sample annotations for isoform count PSI analysis
> colData_ASE <- rbind(colData, colData)
> colData_ASE$ASE <- rep(c("Included", "Excluded"), each = nrow(colData))
> rownames(colData_ASE) <- c(
+     paste0(rownames(colData), ".Included"),
+     paste0(rownames(colData), ".Excluded")
+ )
> 
> model_IncExc <- model.matrix(
+     ~0 + replicate + treatment,
+     data = colData
+ )
> 
> model_ASE <- model.matrix(
+     ~0 + replicate + treatment + treatment:ASE,
+     data = colData_ASE
+ )
> 
> fit <- fitASE_edgeR_custom(se, model_IncExc, model_ASE)
Feb 07 16:45:28 Fitting edgeR contrast for included / excluded counts separately
Feb 07 16:45:28 Fitting edgeR contrast for included / excluded counts together
> 
> res_customModel <- testASE_edgeR(se, fit,
+     contrast_IncExc = c(0,0,0,1),
+     contrast_ASE = c(0,0,0,0,-1,1)
+ )
> 
> # Check this produces identical results:
> identical(res_customModel, res)
[1] TRUE
> 
> ### Time series examples using edgeR and splines 
> # - similar to section 4.8 in the edgeR vignette
> 
> colData(se)$timepoint <- rep(c(1,2,3), each = 2)
> colData(se)$batch <- rep(c("1", "2"), 3)
> 
> # First, we set up a polynomial spline with 2 degrees of freedom:
> Time <- poly(colData(se)$timepoint, df = 2)
> 
> # Next, we define the batch factor:
> Batch <- factor(colData(se)$batch)
> 
> # Finally, we construct the same factors for ASE analysis. Note that
> #   each factor must be repeated twice
> 
> Time_ASE <- rbind(Time, Time)
> Batch_ASE <- c(Batch, Batch)
> ASE <- factor(
+     rep(c("Included", "Excluded"), each = nrow(colData(se)))
+ )
> 
> # Now, we set up the model matrices for isoform and PSI count modelling
> model_IncExc <- model.matrix(~0 + Batch + Time)
> model_ASE <- model.matrix(~0 + Batch_ASE + Time_ASE + Time_ASE:ASE)
> 
> fit <- fitASE_edgeR_custom(se, model_IncExc, model_ASE)
Feb 07 16:45:28 Fitting edgeR contrast for included / excluded counts separately
Killed
* checking for unstated dependencies in ‘tests’ ... OK
* checking tests ...
  Running ‘testthat.R’
 ERROR
Running the tests in ‘tests/testthat.R’ failed.
Last 13 lines of output:
  ||                           Annotations : transcripts.gtf (GTF)              ||
  ||                                                                            ||
  \\============================================================================//
  
  //=============== Running (07-Feb-2023 16:46:02, pid=4178521) ================\\
  ||                                                                            ||
  || Check the input reads.                                                     ||
  || The input file contains base space reads.                                  ||
  || Initialise the memory objects.                                             ||
  || Estimate the mean read length.                                             ||
  || Create the output BAM file.                                                ||
  || Check the index.                                                           ||
  Unable top open index './reference_index'. Please make sure that the correct prefix is specified and you have the permission to read these files. For example, if there are files '/opt/my_index.reads', '/opt/my_index.files' and etc, the index prefix should be specified as '/opt/my_index' without any suffix. 
  
  Killed
* checking for unstated dependencies in vignettes ... OK
* checking package vignettes in ‘inst/doc’ ... OK
* checking running R code from vignettes ...
  ‘SW_Cookbook.Rmd’ using ‘UTF-8’... OK
  ‘SW_QuickStart.Rmd’ using ‘UTF-8’... OK
 NONE
* checking re-building of vignette outputs ... ERROR
Error(s) in re-building vignettes:
  ...
--- re-building ‘SW_Cookbook.Rmd’ using rmarkdown
--- finished re-building ‘SW_Cookbook.Rmd’

--- re-building ‘SW_QuickStart.Rmd’ using rmarkdown
Killed
SUMMARY: processing the following file failed:
  ‘SW_QuickStart.Rmd’

Error: Vignette re-building failed.
Execution halted

* checking PDF version of manual ... OK
* DONE

Status: 3 ERRORs, 4 NOTEs
See
  ‘/home/biocbuild/bbs-3.17-bioc/meat/SpliceWiz.Rcheck/00check.log’
for details.

