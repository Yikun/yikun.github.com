##############################################################################
##############################################################################
###
### Running command:
###
###   /home/biocbuild/bbs-3.17-bioc/R/bin/R CMD check --install=check:PADOG.install-out.txt --library=/home/biocbuild/bbs-3.17-bioc/R/library --timings PADOG_1.41.0.tar.gz
###
##############################################################################
##############################################################################


* using log directory ‘/home/biocbuild/bbs-3.17-bioc/meat/PADOG.Rcheck’
* using R Under development (unstable) (2023-01-14 r83615)
* using platform: aarch64-unknown-linux-gnu (64-bit)
* R was compiled by
    gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
    GNU Fortran (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
* running under: Ubuntu 22.04.1 LTS
* using session charset: UTF-8
* checking for file ‘PADOG/DESCRIPTION’ ... OK
* this is package ‘PADOG’ version ‘1.41.0’
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ‘PADOG’ can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking ‘build’ directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
compPADOG: no visible global function definition for ‘data’
compPADOG : padogF: no visible global function definition for
  ‘p.adjust’
compPADOG : gsaF: no visible global function definition for ‘p.adjust’
compPADOG : <anonymous>: no visible global function definition for
  ‘complete.cases’
compPADOG : wi: no visible global function definition for ‘wilcox.test’
compPADOG: no visible binding for global variable ‘median’
compPADOG: no visible global function definition for ‘colors’
compPADOG: no visible global function definition for ‘par’
compPADOG: no visible global function definition for ‘boxplot’
compPADOG: no visible global function definition for ‘abline’
filteranot: no visible global function definition for ‘model.matrix’
padog: no visible global function definition for ‘var’
padog: no visible global function definition for ‘quantile’
padog: no visible global function definition for ‘sd’
padog : combFun: no visible global function definition for ‘combn’
padog : gsScoreFun: no visible global function definition for
  ‘model.matrix’
padog : gsScoreFun : <anonymous>: no visible global function definition
  for ‘na.omit’
padog: no visible global function definition for ‘par’
padog: no visible global function definition for ‘boxplot’
padog: no visible global function definition for ‘points’
padog: no visible global function definition for ‘abline’
Undefined global functions or variables:
  abline boxplot colors combn complete.cases data median model.matrix
  na.omit p.adjust par points quantile sd var wilcox.test
Consider adding
  importFrom("grDevices", "colors")
  importFrom("graphics", "abline", "boxplot", "par", "points")
  importFrom("stats", "complete.cases", "median", "model.matrix",
             "na.omit", "p.adjust", "quantile", "sd", "var",
             "wilcox.test")
  importFrom("utils", "combn", "data")
to your NAMESPACE file.
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking files in ‘vignettes’ ... OK
* checking examples ... ERROR
Running examples in ‘PADOG-Ex.R’ failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: compPADOG
> ### Title: Benchmark for gene set analysis methods using 24 datasets
> ### Aliases: compPADOG
> ### Keywords: nonparametric methods
> 
> ### ** Examples
> 
> 
> #compare a new geneset analysis method with PADOG and GSA
> 
> #define your new gene set analysis method that takes as input:
> #set- the name of dataset file from the PADOGsetspackage
> #mygslist - a list with the genesets
> #minsize- minimum number of genes in a geneset to be considered for analysis 
> 
> randomF=function(set,mygslist,minsize){
+ set.seed(1)
+ #this loads the dataset in an ExpressionSet object called x
+ data(list=set,package="KEGGdzPathwaysGEO")
+ x=get(set)
+ 
+ #Extract from the dataset the required info to be passed to padog
+ exp=experimentData(x);
+ dat.m=exprs(x)
+ ano=pData(x)
+ dataset= exp@name
+ design= notes(exp)$design
+ annotation= paste(x@annotation,".db",sep="")
+ targetGeneSets= notes(exp)$targetGeneSets
+ 
+ 
+ #get rid of duplicates probesets per ENTREZ ID by keeping the probeset 
+ #with smallest p-value (computed using limma) 
+ aT1=filteranot(esetm=dat.m,group=ano$Group,paired=(design=="Paired"),
+  block=ano$Block,annotation=annotation)
+ #create an output dataframe for this toy method with random gene set p-values
+ mygslistSize=unlist(lapply(mygslist,function(x){length(intersect(aT1$ENTREZID,x))}))
+ res=data.frame(ID=names(mygslist),P=runif(length(mygslist)),
+  Size=mygslistSize,stringsAsFactors=FALSE)
+ res$FDR=p.adjust(res$P,"fdr")
+ #drop genesets with less than minsize genes in the current dataset 
+ res=res[res$Size>=minsize,]
+ #compute ranks
+ res$Rank=rank(res$P)/dim(res)[1]*100
+ #needed to compare ranks between methods; must be the same as given 
+ #in mymethods argument "list(myRand="
+ res$Method="myRand";
+ #needed because comparisons of ranks between methods is paired at dataset level
+ res$Dataset<-dataset;
+ #output only result for the targetGeneSets 
+ #which are gene sets expected to be relevant in this dataset
+ return(res[res$ID %in% targetGeneSets,])
+ }
> 
> #run the analysis on all 24 datasets and compare the new method "myRand" with 
> #PADOG and GSA (if installed) (chosen as reference since is listed first in the existingMethods)
> #if the package parallel is installed datasets are analyzed in parallel.
> #out=compPADOG(datasets=NULL,existingMethods=c("GSA","PADOG"),
>  #mymethods=list(myRand=randomF),
>  #gslist="KEGGRESTpathway",Nmin=3,NI=1000,plots=TRUE,verbose=FALSE)
> 
> #compare myRand against PADOG on 4 datasets only
> #mysets=data(package="PADOGsets")$results[,"Item"]
> mysets=c("GSE9348","GSE8671","GSE1297")
> out=compPADOG(datasets=mysets,existingMethods=c("PADOG"),
+  mymethods=list(myRand=randomF),
+  gslist="KEGGRESTpathway",Nmin=3,NI=20,plots=FALSE,verbose=FALSE)
Killed
* checking for unstated dependencies in vignettes ... OK
* checking package vignettes in ‘inst/doc’ ... OK
* checking running R code from vignettes ...
  ‘PADOG.Rnw’... failed to complete the test
 ERROR
Errors in running code in vignettes:
when running code in ‘PADOG.Rnw’
  ...
> randomF = randFun(1)

> mysets = c("GSE9348", "GSE8671", "GSE1297")

> out = compPADOG(datasets = mysets, existingMethods = c("PADOG"), 
+     mymethods = list(myRand = randomF), gslist = "KEGGRESTpathway", 
+     Nmin  .... [TRUNCATED] 
Killed

... incomplete output.  Crash?

* checking re-building of vignette outputs ... NOTE
Error(s) in re-building vignettes:
--- re-building ‘PADOG.Rnw’ using Sweave
Loading required package: KEGGdzPathwaysGEO
Loading required package: Biobase
Loading required package: BiocGenerics

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    Filter, Find, Map, Position, Reduce, anyDuplicated, aperm, append,
    as.data.frame, basename, cbind, colnames, dirname, do.call,
    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,
    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,
    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,
    tapply, union, unique, unsplit, which.max, which.min

Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.



Killed

* checking PDF version of manual ... OK
* DONE

Status: 2 ERRORs, 2 NOTEs
See
  ‘/home/biocbuild/bbs-3.17-bioc/meat/PADOG.Rcheck/00check.log’
for details.

